{"ast":null,"code":"import _classCallCheck from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/DefaultSettings.js\";\n\n/* eslint-disable */\nimport React from 'react';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { withRouter } from 'react-router-dom';\nimport { CirclePicker } from 'react-color';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport axios from \"axios\";\nimport { backendURL } from \"../dependency\";\n\nvar DefaultSettings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DefaultSettings, _React$Component);\n\n  function DefaultSettings(props) {\n    var _this;\n\n    _classCallCheck(this, DefaultSettings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DefaultSettings).call(this, props));\n    _this.state = {\n      noteColor: '#f0E5EB'\n    };\n    return _this;\n  }\n\n  _createClass(DefaultSettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"COMPONENT MOUNTED?\");\n\n      if (!localStorage.getItem('id')) {\n        return this.props.history.push('/login');\n      }\n\n      var accessToken = localStorage.getItem('access_token');\n      var AuthStr = \"Bearer \".concat(accessToken);\n      var headers = {\n        Authorization: AuthStr\n      };\n      axios.get(\"\".concat(backendURL, \"/get-default-settings\"), {\n        headers: headers\n      }).then(function (response) {\n        console.log(\"HERE\", response);\n        var parsedData = response.data;\n        var val = '';\n\n        try {\n          val = parsedData.credentials.defaultNoteSettings.fontSize.toString();\n        } catch (err) {\n          val = '12';\n        }\n\n        _this2.setState({\n          noteColor: parsedData.credentials.defaultNoteSettings.noteColor,\n          fontName: parsedData.credentials.defaultNoteSettings.fontName,\n          fontSize: val,\n          fontNames: parsedData.applicationSettings.fontNames,\n          fontSizes: parsedData.applicationSettings.fontSizes\n        });\n      }).catch(function (e) {\n        console.log(\"ERROR HERE\", e);\n      });\n    }\n  }, {\n    key: \"changeNoteColor\",\n    value: function changeNoteColor(color) {\n      this.setState({\n        noteColor: color.hex\n      });\n    }\n  }, {\n    key: \"saveDefaultSettings\",\n    value: function saveDefaultSettings(noteColor, fontName, fontSize) {\n      var _this3 = this;\n\n      var obj = {\n        noteColor: noteColor,\n        fontName: fontName,\n        fontSize: fontSize\n      };\n\n      if (!obj.noteColor) {\n        obj.noteColor = '#f0E5EB';\n      }\n\n      if (!obj.fontName) {\n        obj.fontName = 'Georgia';\n      }\n\n      if (!obj.fontSize) {\n        obj.fontSize = 11;\n      }\n\n      var accessToken = localStorage.getItem('access_token');\n      var AuthStr = \"Bearer \".concat(accessToken);\n      var headers = {\n        Authorization: AuthStr\n      };\n      var body = JSON.stringify(obj);\n      console.log(\"UPDATING NOTE SETTINGS\", obj);\n      axios.post(\"\".concat(backendURL, \"/update-default-settings\"), {\n        body: body\n      }, {\n        headers: headers\n      }).then(function (response) {\n        if (response.status === 200) {\n          _this3.props.history.push('/dashboard');\n        } else {\n          console.log(\"ERROR WITH JWT\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      document.body.style.backgroundColor = \"#f5f5f5\";\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Note Color\"), React.createElement(CirclePicker, {\n        color: this.state.noteColor,\n        onChangeComplete: function onChangeComplete(color) {\n          return _this4.changeNoteColor(color);\n        },\n        colors: [\"#FCDFD7\", \"#FCF9DA\", \"#D4ECDC\", \"#E1EBF5\", \"#F0E5EB\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Font Name\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this4.saveDefaultSettings('#F0E5EB', 'Georgia', 11);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" Or Use Recommended Settings\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this4.saveDefaultSettings(_this4.state.noteColor, _this4.state.fontName, _this4.state.fontSize);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Save Default Settings\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DefaultSettings;\n}(React.Component);\n\nexport default withRouter(DefaultSettings);","map":{"version":3,"sources":["/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/DefaultSettings.js"],"names":["React","Button","withRouter","CirclePicker","Dropdown","axios","backendURL","DefaultSettings","props","state","noteColor","console","log","localStorage","getItem","history","push","accessToken","AuthStr","concat","headers","Authorization","get","then","response","parsedData","data","val","credentials","defaultNoteSettings","fontSize","toString","err","setState","fontName","fontNames","applicationSettings","fontSizes","catch","e","color","hex","obj","body","JSON","stringify","post","status","document","style","backgroundColor","changeNoteColor","saveDefaultSettings","Component"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { withRouter } from 'react-router-dom';\nimport { CirclePicker } from 'react-color';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport axios from \"axios\";\nimport {backendURL} from \"../dependency\";\n\nclass DefaultSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteColor: '#f0E5EB',\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"COMPONENT MOUNTED?\")\n      if (!localStorage.getItem('id')){\n          return this.props.history.push('/login')\n      }\n      const accessToken = localStorage.getItem('access_token');\n      const AuthStr = `Bearer `.concat(accessToken);\n      const headers = { Authorization: AuthStr };\n      axios.get(`${backendURL}/get-default-settings`, {headers: headers}).then((response) => {\n          console.log(\"HERE\", response)\n          const parsedData =response.data;\n          let val = '';\n          try {\n              val = parsedData.credentials.defaultNoteSettings.fontSize.toString();\n          } catch (err) {\n              val = '12';\n          }\n          this.setState({\n              noteColor: parsedData.credentials.defaultNoteSettings.noteColor,\n              fontName: parsedData.credentials.defaultNoteSettings.fontName,\n              fontSize: val,\n              fontNames: parsedData.applicationSettings.fontNames,\n              fontSizes: parsedData.applicationSettings.fontSizes,\n          });\n\n      }).catch(e => {\n        console.log(\"ERROR HERE\", e)\n      })\n\n\n  }\n\n  changeNoteColor(color) {\n    this.setState({ noteColor: color.hex });\n  }\n\n  saveDefaultSettings(noteColor, fontName, fontSize) {\n    const obj = {\n      noteColor, fontName, fontSize,\n    };\n    if (!obj.noteColor) { obj.noteColor = '#f0E5EB'; }\n    if (!obj.fontName) { obj.fontName = 'Georgia'; }\n    if (!obj.fontSize) { obj.fontSize = 11; }\n\n    const accessToken = localStorage.getItem('access_token');\n    const AuthStr = `Bearer `.concat(accessToken);\n    const headers = { Authorization: AuthStr };\n    const body = JSON.stringify(obj);\n    console.log(\"UPDATING NOTE SETTINGS\", obj)\n    axios.post(`${backendURL}/update-default-settings`, { body: body  }, {headers: headers},).then((response) => {\n      if(response.status === 200){\n        this.props.history.push('/dashboard');\n      }\n      else {\n          console.log(\"ERROR WITH JWT\");\n      }\n\n    });\n  }\n\n    render() {\n        document.body.style.backgroundColor = \"#f5f5f5\"\n        console.log(this.state)\n        return (\n            <div>\n                <br />\n                <p>Note Color</p>\n                <CirclePicker\n                    color={this.state.noteColor}\n                    onChangeComplete={color => this.changeNoteColor(color)}\n                    colors={[\"#FCDFD7\", \"#FCF9DA\", \"#D4ECDC\", \"#E1EBF5\", \"#F0E5EB\"]}\n                />\n                <p>Font Name</p>\n                \n                <br />\n                <a onClick={() => this.saveDefaultSettings('#F0E5EB', 'Georgia', 11)}> Or Use Recommended Settings</a><br/>\n                <Button onClick={() => this.saveDefaultSettings(this.state.noteColor, this.state.fontName, this.state.fontSize)}>Save Default Settings</Button>\n                <br />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(DefaultSettings);\n"]},"metadata":{},"sourceType":"module"}