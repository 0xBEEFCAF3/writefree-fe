{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/Note.js\";\n\n/* eslint-disable */\nimport React from 'react';\nimport { EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\nimport { withRouter } from 'react-router-dom';\nimport { Input, Button, Select, Tabs } from 'antd';\nimport request from 'request';\nimport Speech from 'react-speech';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport Alert from 'react-s-alert';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/jelly.css';\nimport { CirclePicker } from 'react-color';\nimport '../css/note.css';\nvar Option = Select.Option;\nvar TabPane = Tabs.TabPane;\n\nvar Note =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Note, _React$Component);\n\n  function Note(props) {\n    var _this;\n\n    _classCallCheck(this, Note);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Note).call(this, props));\n    _this.state = {\n      editorState: EditorState.createEmpty(),\n      noteCategory: undefined,\n      noteTitle: undefined\n    };\n\n    _this.focus = function () {\n      return _this.refs.editor.focus();\n    };\n\n    _this.onChange = function (editorState) {\n      return _this.setState({\n        editorState: editorState\n      });\n    };\n\n    _this.handleKeyCommand = function (command) {\n      return _this._handleKeyCommand(command);\n    };\n\n    _this.toggleBlockType = function (type) {\n      return _this._toggleBlockType(type);\n    };\n\n    _this.toggleInlineStyle = function (style) {\n      return _this._toggleInlineStyle(style);\n    };\n\n    _this.changeToolBar = _this.changeToolBar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Note, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var noteID = this.props.location.state.noteID;\n      var fetchNote = {\n        method: 'GET',\n        url: \"http://127.0.0.1:5000/fetch-note/\".concat(String(noteID)),\n        qs: {\n          email: localStorage.getItem('email'),\n          noteID: noteID\n        },\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      request(fetchNote, function (error, response, body) {\n        var parsedData = JSON.parse(body);\n\n        if (parsedData.noteSettings) {\n          var contentState = parsedData.noteSettings;\n          this.setState({\n            editorState: EditorState.createWithContent(convertFromRaw(contentState)),\n            noteColor: parsedData.noteColor\n          });\n        }\n\n        if (parsedData.title) {\n          var _contentState = parsedData.content;\n          this.setState({\n            editorState: EditorState.createWithContent(convertFromRaw(_contentState)),\n            noteTitle: parsedData.title,\n            noteCategory: parsedData.category,\n            noteColor: parsedData.noteColor\n          });\n        }\n      }.bind(this));\n    }\n  }, {\n    key: \"_handleKeyCommand\",\n    value: function _handleKeyCommand(command) {\n      var editorState = this.state.editorState;\n      var newState = RichUtils.handleKeyCommand(editorState, command);\n\n      if (newState) {\n        this.onChange(newState);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_toggleBlockType\",\n    value: function _toggleBlockType(blockType) {\n      this.onChange(RichUtils.toggleBlockType(this.state.editorState, blockType));\n    }\n  }, {\n    key: \"_toggleInlineStyle\",\n    value: function _toggleInlineStyle(inlineStyle) {\n      this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, inlineStyle));\n    }\n  }, {\n    key: \"saveNote\",\n    value: function saveNote(title, category, noteID, noteContent) {\n      if (!title) {\n        this.handleJelly();\n      } else {\n        var convertedNoteContent = convertToRaw(noteContent);\n        var obj = {\n          title: title,\n          category: category,\n          noteID: noteID,\n          noteContent: convertedNoteContent\n        };\n        var saveNote = {\n          method: 'POST',\n          url: 'http://127.0.0.1:5000/save-note',\n          body: JSON.stringify(obj),\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        };\n        return request(saveNote);\n      }\n    }\n  }, {\n    key: \"goToDashBoard\",\n    value: function () {\n      var _goToDashBoard = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(title) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (title) {\n                  _context.next = 4;\n                  break;\n                }\n\n                this.handleJelly();\n                _context.next = 7;\n                break;\n\n              case 4:\n                _context.next = 6;\n                return this.saveNote(this.state.noteTitle, this.state.noteCategory, this.props.location.state.noteID, this.state.editorState.getCurrentContent());\n\n              case 6:\n                this.props.history.push(\"/dashboard\");\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function goToDashBoard(_x) {\n        return _goToDashBoard.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"speechNote\",\n    value: function speechNote(noteContent) {\n      var text = '';\n\n      for (var line in noteContent.blocks) {\n        text = text + noteContent.blocks[line].text + \". \";\n      }\n\n      return text;\n    }\n  }, {\n    key: \"handleJelly\",\n    value: function handleJelly() {\n      Alert.error('Please Enter a Note Header!', {\n        position: 'top-right',\n        effect: 'jelly'\n      });\n    }\n  }, {\n    key: \"changeToolBar\",\n    value: function changeToolBar(key) {\n      if (key === \"basicFeatures\") {\n        this.setState({\n          'toolbar': {},\n          'toolbarCustomButtons': []\n        });\n      } else if (key === \"dyslexicFeatures\") {\n        this.setState({\n          'toolbar': {\n            'options': []\n          },\n          'toolbarCustomButtons': [React.createElement(WordSpacingOption, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }), React.createElement(LineSpacingOption, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }), React.createElement(SpeechOption, {\n            speechText: convertToRaw(this.state.editorState.getCurrentContent()),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }), React.createElement(NoteColor, {\n            noteColor: this.state.noteColor,\n            noteID: this.props.location.state.noteID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          })]\n        });\n      } else if (key === \"otherFeatures\") {\n        this.setState({\n          'toolbar': {\n            'options': []\n          },\n          'toolbarCustomButtons': [React.createElement(ConvertToPDF, {\n            noteID: this.props.location.state.noteID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          })]\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var editorState = this.state.editorState;\n      return React.createElement(\"div\", {\n        style: {\n          background: \"#f5f5f5\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          border: 'none',\n          background: \"#f5f5f5\"\n        },\n        placeholder: \"Note Header\",\n        value: this.state.noteTitle,\n        onChange: function onChange(noteTitle) {\n          return _this2.setState({\n            noteTitle: noteTitle.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          border: 'none',\n          background: \"#f5f5f5\"\n        },\n        placeholder: \"Note Category\",\n        value: this.state.noteCategory,\n        onChange: function onChange(noteCategory) {\n          _this2.setState({\n            noteCategory: noteCategory.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Tabs, {\n        onChange: this.changeToolBar,\n        type: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Basic\",\n        key: \"basicFeatures\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(TabPane, {\n        tab: \"Dyslexic\",\n        key: \"dyslexicFeatures\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(TabPane, {\n        tab: \"Other\",\n        key: \"otherFeatures\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(Alert, {\n        stack: true,\n        timeout: 3000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"RichEditor-root\",\n        id: \"textEdiotr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Editor, {\n        spellCheck: true,\n        editorState: editorState,\n        toolbarClassName: \"rdw-storybook-toolbar\",\n        wrapperStyle: {\n          background: \"#f5f5f5\"\n        },\n        editorStyle: {\n          backgroundColor: this.state.noteColor\n        },\n        onEditorStateChange: this.onChange,\n        toolbarCustomButtons: this.state.toolbarCustomButtons,\n        toolbar: this.state.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: {\n          \"width\": \"100%\"\n        },\n        type: \"primary\",\n        onClick: function onClick() {\n          return _this2.goToDashBoard(_this2.state.noteTitle);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Go To Dashboard\"));\n    }\n  }]);\n\n  return Note;\n}(React.Component); // value for selection\n\n\nfunction changeLineSpacing(value) {\n  document.getElementById(\"textEdiotr\").style.lineHeight = value;\n} // Custom overrides for \"code\" style.\n\n\nvar styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 60,\n    padding: 2\n  }\n};\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote';\n\n    default:\n      return null;\n  }\n}\n\nvar StyleButton =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(StyleButton, _React$Component2);\n\n  function StyleButton() {\n    var _this3;\n\n    _classCallCheck(this, StyleButton);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(StyleButton).call(this));\n\n    _this3.onToggle = function (e) {\n      e.preventDefault();\n\n      _this3.props.onToggle(_this3.props.style);\n    };\n\n    return _this3;\n  }\n\n  _createClass(StyleButton, [{\n    key: \"render\",\n    value: function render() {\n      var className = 'RichEditor-styleButton';\n\n      if (this.props.active) {\n        className += ' RichEditor-activeButton';\n      }\n\n      return React.createElement(\"span\", {\n        className: className,\n        onMouseDown: this.onToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.props.label);\n    }\n  }]);\n\n  return StyleButton;\n}(React.Component);\n\nvar BLOCK_TYPES = [{\n  label: 'H1',\n  style: 'header-one'\n}, {\n  label: 'H2',\n  style: 'header-two'\n}, {\n  label: 'H3',\n  style: 'header-three'\n}, {\n  label: 'H4',\n  style: 'header-four'\n}, {\n  label: 'H5',\n  style: 'header-five'\n}, {\n  label: 'H6',\n  style: 'header-six'\n}, {\n  label: 'Blockquote',\n  style: 'blockquote'\n}, {\n  label: 'UL',\n  style: 'unordered-list-item'\n}, {\n  label: 'OL',\n  style: 'ordered-list-item'\n}, {\n  label: 'Code Block',\n  style: 'code-block'\n}];\n\nvar BlockStyleControls = function BlockStyleControls(props) {\n  var editorState = props.editorState;\n  var selection = editorState.getSelection();\n  var blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  return React.createElement(\"div\", {\n    className: \"RichEditor-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, BLOCK_TYPES.map(function (type) {\n    return React.createElement(StyleButton, {\n      key: type.label,\n      active: type.style === blockType,\n      label: type.label,\n      onToggle: props.onToggle,\n      style: type.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    });\n  }));\n};\n\nvar INLINE_STYLES = [{\n  label: 'Bold',\n  style: 'BOLD'\n}, {\n  label: 'Italic',\n  style: 'ITALIC'\n}, {\n  label: 'Underline',\n  style: 'UNDERLINE'\n}, {\n  label: 'Monospace',\n  style: 'CODE'\n}];\n\nvar InlineStyleControls = function InlineStyleControls(props) {\n  var currentStyle = props.editorState.getCurrentInlineStyle();\n  return React.createElement(\"div\", {\n    className: \"RichEditor-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, INLINE_STYLES.map(function (type) {\n    return React.createElement(StyleButton, {\n      key: type.label,\n      active: currentStyle.has(type.style),\n      label: type.label,\n      onToggle: props.onToggle,\n      style: type.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    });\n  }));\n};\n\nvar SpeechOption = function SpeechOption(props) {\n  function speechNote(noteContent) {\n    var text = '';\n\n    for (var line in noteContent.blocks) {\n      text = text + noteContent.blocks[line].text + \". \";\n    }\n\n    return text;\n  }\n\n  return React.createElement(Speech, {\n    text: speechNote(props.speechText),\n    displayText: \"Text to Speech\",\n    textAsButton: true,\n    voice: \"Google UK English Female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  });\n};\n\nvar WordSpacingOption =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(WordSpacingOption, _React$Component3);\n\n  function WordSpacingOption(props) {\n    _classCallCheck(this, WordSpacingOption);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WordSpacingOption).call(this, props));\n  } // spacing methods\n\n\n  _createClass(WordSpacingOption, [{\n    key: \"changeWordSpacing\",\n    value: function changeWordSpacing(value) {\n      var textfiled = document.getElementsByClassName('DraftEditor-root');\n      textfiled[0].style.wordSpacing = value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Select, {\n        defaultValue: \"0.9px\",\n        style: {\n          width: 150\n        },\n        onChange: function onChange(value) {\n          return _this4.changeWordSpacing(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"0.9px\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Word Spacing\"), React.createElement(Option, {\n        value: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Default\"), React.createElement(Option, {\n        value: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"10px\"), React.createElement(Option, {\n        value: \"20px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"20px\"), React.createElement(Option, {\n        value: \"50px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"50px\")));\n    }\n  }]);\n\n  return WordSpacingOption;\n}(React.Component);\n\nvar LineSpacingOption =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(LineSpacingOption, _React$Component4);\n\n  function LineSpacingOption(props) {\n    _classCallCheck(this, LineSpacingOption);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LineSpacingOption).call(this, props));\n  }\n\n  _createClass(LineSpacingOption, [{\n    key: \"changeLineSpacing\",\n    value: function changeLineSpacing(value) {\n      var textfiled = document.getElementsByClassName('DraftEditor-root');\n      textfiled[0].style.lineHeight = value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Select, {\n        defaultValue: \"0.05\",\n        style: {\n          width: 150\n        },\n        onChange: function onChange(value) {\n          return _this5.changeLineSpacing(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"0.05\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Line Spacing\"), React.createElement(Option, {\n        value: \"0.06\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Default\"), React.createElement(Option, {\n        value: \"0.6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"1.6\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"2\"), React.createElement(Option, {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"5\")));\n    }\n  }]);\n\n  return LineSpacingOption;\n}(React.Component);\n\nvar ConvertToPDF =\n/*#__PURE__*/\nfunction (_React$Component5) {\n  _inherits(ConvertToPDF, _React$Component5);\n\n  function ConvertToPDF(props) {\n    _classCallCheck(this, ConvertToPDF);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ConvertToPDF).call(this, props));\n  }\n\n  _createClass(ConvertToPDF, [{\n    key: \"renderPDF\",\n    value: function renderPDF(noteID) {\n      window.open(\"http://www.localhost:5000/renderPDF?noteID=\" + noteID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(Button, {\n        onClick: function onClick() {\n          return _this6.renderPDF(_this6.props.noteID);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Convert to PDF\");\n    }\n  }]);\n\n  return ConvertToPDF;\n}(React.Component);\n\nvar NoteColor =\n/*#__PURE__*/\nfunction (_React$Component6) {\n  _inherits(NoteColor, _React$Component6);\n\n  function NoteColor(props) {\n    var _this7;\n\n    _classCallCheck(this, NoteColor);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(NoteColor).call(this, props));\n    _this7.state = {};\n    return _this7;\n  }\n\n  _createClass(NoteColor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        noteColor: this.props.noteColor\n      });\n    }\n  }, {\n    key: \"changeNoteColor\",\n    value: function changeNoteColor(noteColor) {\n      var noteID = this.props.noteID;\n      var changeNoteColor = {\n        method: 'POST',\n        url: 'http://127.0.0.1:5000/change-note-color',\n        qs: {\n          noteID: noteID,\n          noteColor: noteColor.hex\n        },\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      request(changeNoteColor, function (error, response, body) {\n        this.setState({\n          noteColor: noteColor.hex\n        });\n      }.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(CirclePicker, {\n        color: this.state.noteColor,\n        onChangeComplete: function onChangeComplete(color) {\n          return _this8.changeNoteColor(color);\n        },\n        colors: [\"#FCDFD7\", \"#FCF9DA\", \"#D4ECDC\", \"#E1EBF5\", \"#F0E5EB\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NoteColor;\n}(React.Component);\n\nexport default withRouter(Note);","map":{"version":3,"sources":["/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/Note.js"],"names":["React","EditorState","RichUtils","convertToRaw","convertFromRaw","withRouter","Input","Button","Select","Tabs","request","Speech","Editor","Alert","CirclePicker","Option","TabPane","Note","props","state","editorState","createEmpty","noteCategory","undefined","noteTitle","focus","refs","editor","onChange","setState","handleKeyCommand","command","_handleKeyCommand","toggleBlockType","type","_toggleBlockType","toggleInlineStyle","style","_toggleInlineStyle","changeToolBar","bind","noteID","location","fetchNote","method","url","String","qs","email","localStorage","getItem","headers","error","response","body","parsedData","JSON","parse","noteSettings","contentState","createWithContent","noteColor","title","content","category","newState","blockType","inlineStyle","noteContent","handleJelly","convertedNoteContent","obj","saveNote","stringify","getCurrentContent","history","push","text","line","blocks","position","effect","key","background","border","target","value","backgroundColor","toolbarCustomButtons","toolbar","goToDashBoard","Component","changeLineSpacing","document","getElementById","lineHeight","styleMap","CODE","fontFamily","fontSize","padding","getBlockStyle","block","getType","StyleButton","onToggle","e","preventDefault","className","active","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","SpeechOption","speechNote","speechText","WordSpacingOption","textfiled","getElementsByClassName","wordSpacing","width","changeWordSpacing","LineSpacingOption","ConvertToPDF","window","open","renderPDF","NoteColor","changeNoteColor","hex","color"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\nimport { withRouter } from 'react-router-dom';\nimport { Input, Button, Select, Tabs } from 'antd';\nimport request from 'request';\nimport Speech from 'react-speech';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport Alert from 'react-s-alert';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/jelly.css';\nimport { CirclePicker } from 'react-color';\nimport '../css/note.css';\n\nconst Option = Select.Option;\n\nconst TabPane = Tabs.TabPane;\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      noteCategory: undefined,\n      noteTitle: undefined,\n    };\n    this.focus = () => this.refs.editor.focus();\n    this.onChange = editorState => this.setState({ editorState });\n    this.handleKeyCommand = command => this._handleKeyCommand(command);\n    this.toggleBlockType = type => this._toggleBlockType(type);\n    this.toggleInlineStyle = style => this._toggleInlineStyle(style);\n    this.changeToolBar = this.changeToolBar.bind(this);\n  }\n  componentDidMount() {\n    const noteID = this.props.location.state.noteID;\n    const fetchNote = {\n      method: 'GET',\n      url: `http://127.0.0.1:5000/fetch-note/${String(noteID)}`,\n      qs: { email: localStorage.getItem('email'), noteID },\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    };\n    request(fetchNote, function (error, response, body) {\n        var parsedData = JSON.parse(body)\n        if (parsedData.noteSettings){\n            let contentState = parsedData.noteSettings\n            this.setState({\n                editorState: EditorState.createWithContent(convertFromRaw((contentState))),\n                noteColor: parsedData.noteColor\n            });\n        }\n        if (parsedData.title){\n            let contentState = parsedData.content\n            this.setState({\n                editorState: EditorState.createWithContent(convertFromRaw((contentState))),\n                noteTitle: parsedData.title,\n                noteCategory: parsedData.category,\n                noteColor: parsedData.noteColor\n            });\n        }\n    }.bind(this));\n  }\n\n    _handleKeyCommand(command) {\n        const {editorState} = this.state;\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState);\n            return true;\n        }\n        return false;\n    }\n\n    _toggleBlockType(blockType) {\n        this.onChange(\n            RichUtils.toggleBlockType(\n                this.state.editorState,\n                blockType\n            )\n        );\n    }\n\n    _toggleInlineStyle(inlineStyle) {\n        this.onChange(\n            RichUtils.toggleInlineStyle(\n                this.state.editorState,\n                inlineStyle\n            )\n        );\n    }\n\n\n    saveNote(title, category, noteID, noteContent){\n        if(!title){\n            this.handleJelly()\n        } else {\n            const convertedNoteContent = convertToRaw(noteContent)\n            const obj = {title, category, noteID, noteContent: convertedNoteContent}\n            var saveNote = {\n                method: 'POST',\n                url: 'http://127.0.0.1:5000/save-note',\n                body: JSON.stringify(obj),\n                headers: {'Content-Type': 'application/x-www-form-urlencoded' }\n            };\n            return request(saveNote)\n        }\n    }\n\n    async goToDashBoard(title){\n        if(!title){\n            this.handleJelly()\n        } else {\n            await this.saveNote(this.state.noteTitle, this.state.noteCategory, this.props.location.state.noteID, this.state.editorState.getCurrentContent())\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n    speechNote(noteContent){\n        var text = '';\n        for (var line in noteContent.blocks){\n            text = text + (noteContent.blocks[line].text) + \". \"\n        }\n        return text\n    }\n    handleJelly() {\n        Alert.error('Please Enter a Note Header!', {\n            position: 'top-right',\n            effect: 'jelly'\n        });\n    }\n    changeToolBar(key){\n        if (key === \"basicFeatures\"){\n            this.setState({'toolbar': {}, 'toolbarCustomButtons': []})\n        }\n        else if (key === \"dyslexicFeatures\"){\n            this.setState({'toolbar': {'options': []}, 'toolbarCustomButtons': [<WordSpacingOption/>,  <LineSpacingOption/>, <SpeechOption speechText={convertToRaw(this.state.editorState.getCurrentContent())}/>, <NoteColor noteColor={this.state.noteColor} noteID={this.props.location.state.noteID}/>]})\n        }\n        else if (key === \"otherFeatures\"){\n            this.setState({'toolbar': {'options': []}, 'toolbarCustomButtons': [<ConvertToPDF noteID={this.props.location.state.noteID}/>]})\n        }\n\n    }\n\n    render() {\n        const {editorState} = this.state;\n        return (\n            <div style={{background: \"#f5f5f5\"}}>\n                <Input style={{ border: 'none', background: \"#f5f5f5\" }} placeholder={\"Note Header\"} value={this.state.noteTitle} onChange={noteTitle => this.setState({noteTitle: noteTitle.target.value})}></Input>\n                <Input style={{ border: 'none', background: \"#f5f5f5\" }} placeholder={\"Note Category\"} value={this.state.noteCategory} onChange={noteCategory => {this.setState({noteCategory: noteCategory.target.value})}}></Input>\n                <Tabs onChange={this.changeToolBar} type=\"card\">\n                    <TabPane tab=\"Basic\" key=\"basicFeatures\"/>\n                    <TabPane tab=\"Dyslexic\" key=\"dyslexicFeatures\"/>\n                    <TabPane tab=\"Other\" key=\"otherFeatures\"/>\n                </Tabs>\n\n                <Alert stack={true} timeout={3000} />\n            <div className=\"RichEditor-root\" id={\"textEdiotr\"}>\n                <Editor\n                    spellCheck={true}\n                    editorState={editorState}\n                    toolbarClassName=\"rdw-storybook-toolbar\"\n                    wrapperStyle={{background: \"#f5f5f5\"}}\n                    editorStyle={{backgroundColor: this.state.noteColor}}\n                    onEditorStateChange={this.onChange}\n                    toolbarCustomButtons={this.state.toolbarCustomButtons}\n                    toolbar={this.state.toolbar}\n                />\n            </div>\n                <br/>\n                <Button style={{\"width\": \"100%\"}}type=\"primary\" onClick={() => this.goToDashBoard(this.state.noteTitle)}>Go To Dashboard</Button>\n\n            </div>\n        );\n    }\n}\n\n// value for selection\nfunction changeLineSpacing(value) {\n    document.getElementById(\"textEdiotr\").style.lineHeight = value;\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n    CODE: {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n        fontSize: 60,\n        padding: 2,\n    },\n};\n\nfunction getBlockStyle(block) {\n    switch (block.getType()) {\n        case 'blockquote': return 'RichEditor-blockquote';\n        default: return null;\n    }\n}\n\nclass StyleButton extends React.Component {\n    constructor() {\n        super();\n        this.onToggle = (e) => {\n            e.preventDefault();\n            this.props.onToggle(this.props.style);\n        };\n    }\n\n    render() {\n        let className = 'RichEditor-styleButton';\n        if (this.props.active) {\n            className += ' RichEditor-activeButton';\n        }\n\n        return (\n            <span className={className} onMouseDown={this.onToggle}>\n        {this.props.label}\n      </span>\n        );\n    }\n}\n\nconst BLOCK_TYPES = [\n    {label: 'H1', style: 'header-one'},\n    {label: 'H2', style: 'header-two'},\n    {label: 'H3', style: 'header-three'},\n    {label: 'H4', style: 'header-four'},\n    {label: 'H5', style: 'header-five'},\n    {label: 'H6', style: 'header-six'},\n    {label: 'Blockquote', style: 'blockquote'},\n    {label: 'UL', style: 'unordered-list-item'},\n    {label: 'OL', style: 'ordered-list-item'},\n    {label: 'Code Block', style: 'code-block'},\n];\n\nconst BlockStyleControls = (props) => {\n    const {editorState} = props;\n    const selection = editorState.getSelection();\n    const blockType = editorState\n        .getCurrentContent()\n        .getBlockForKey(selection.getStartKey())\n        .getType();\n\n    return (\n        <div className=\"RichEditor-controls\">\n            {BLOCK_TYPES.map((type) =>\n                <StyleButton\n                    key={type.label}\n                    active={type.style === blockType}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\n\nvar INLINE_STYLES = [\n    {label: 'Bold', style: 'BOLD'},\n    {label: 'Italic', style: 'ITALIC'},\n    {label: 'Underline', style: 'UNDERLINE'},\n    {label: 'Monospace', style: 'CODE'},\n];\n\nconst InlineStyleControls = (props) => {\n    var currentStyle = props.editorState.getCurrentInlineStyle();\n    return (\n        <div className=\"RichEditor-controls\">\n            {INLINE_STYLES.map(type =>\n                <StyleButton\n                    key={type.label}\n                    active={currentStyle.has(type.style)}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\n\nconst SpeechOption = (props) => {\n    function speechNote(noteContent) {\n        var text = '';\n        for (var line in noteContent.blocks){\n            text = text + (noteContent.blocks[line].text) + \". \"\n        }\n        return text\n    }\n    return (\n        <Speech\n            text={speechNote(props.speechText)}\n            displayText={\"Text to Speech\"}\n            textAsButton={true}\n            voice=\"Google UK English Female\" />\n    );\n};\n\nclass WordSpacingOption extends React.Component {\n    constructor(props){\n        super(props)\n    }\n    // spacing methods\n    changeWordSpacing(value) {\n        var textfiled = document.getElementsByClassName('DraftEditor-root');\n        textfiled[0].style.wordSpacing = value;\n    }\n\n    render() {\n        return (\n            <div>\n                <Select defaultValue=\"0.9px\" style={{ width: 150 }} onChange={(value) => this.changeWordSpacing(value)}>\n                    <Option value=\"0.9px\" disabled>Word Spacing</Option>\n                    <Option value=\"normal\">Default</Option>\n                    <Option value=\"10px\">10px</Option>\n                    <Option value=\"20px\">20px</Option>\n                    <Option value=\"50px\">50px</Option>\n                </Select>\n            </div>\n        );\n    }\n}\n\nclass LineSpacingOption extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    changeLineSpacing(value) {\n        var textfiled = document.getElementsByClassName('DraftEditor-root');\n        textfiled[0].style.lineHeight = value;\n    }\n\n    render() {\n        return (\n            <div>\n                <Select defaultValue=\"0.05\" style={{ width: 150 }} onChange={(value) => this.changeLineSpacing(value)}>\n                    <Option value=\"0.05\" disabled>Line Spacing</Option>\n                    <Option value=\"0.06\">Default</Option>\n                    <Option value=\"0.6\">1.6</Option>\n                    <Option value=\"1\">2</Option>\n                    <Option value=\"4\">5</Option>\n                </Select>\n\n            </div>\n        );\n    }\n}\n\nclass ConvertToPDF extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    renderPDF(noteID){\n        window.open(\"http://www.localhost:5000/renderPDF?noteID=\"+noteID);\n    }\n\n    render() {\n        return (\n            <Button onClick={() => this.renderPDF(this.props.noteID)}>Convert to PDF</Button>\n        );\n    }\n}\n\nclass NoteColor extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={}\n    }\n\n    componentDidMount(){\n        this.setState({noteColor: this.props.noteColor})\n    }\n\n    changeNoteColor(noteColor) {\n        const noteID = this.props.noteID\n        var changeNoteColor = {\n            method: 'POST',\n            url: 'http://127.0.0.1:5000/change-note-color',\n            qs: {noteID, noteColor: noteColor.hex},\n            headers: {'Content-Type': 'application/x-www-form-urlencoded' }\n        };\n        request(changeNoteColor, function (error, response, body) {\n            this.setState({ noteColor: noteColor.hex });\n        }.bind(this));\n    };\n\n    render() {\n        return (\n            <div>\n                <CirclePicker\n                    color={this.state.noteColor}\n                    onChangeComplete={color => this.changeNoteColor(color)}\n                    colors={[\"#FCDFD7\", \"#FCF9DA\", \"#D4ECDC\", \"#E1EBF5\", \"#F0E5EB\"]}\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(Note);\n"]},"metadata":{},"sourceType":"module"}