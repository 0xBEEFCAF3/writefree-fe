{"ast":null,"code":"var _jsxFileName = \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/Editor/ToolBarOptions/ConvertToPDF.js\";\nimport { Button } from \"antd\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nvar ConvertToPDF = function ConvertToPDF(props) {\n  function renderPDF(noteID, noteHTML, noteColor) {\n    var parsedHTML = \"<body style=\\\"background-color: \".concat(noteColor, \";\\\" >\") + noteHTML + \"</body>\";\n    document.body.style.backgroundColor = \"#f5f5f5\";\n    axios.get('http://127.0.0.1:5000/renderPDF', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      params: {\n        'noteID': noteID,\n        'noteHTML': parsedHTML\n      }\n    }).then(function (response) {\n      window.open(response.request.responseURL);\n    });\n  }\n\n  return React.createElement(Button, {\n    className: 'convert-to-pdf',\n    onClick: function onClick() {\n      return renderPDF(props.noteID, props.noteHTML, props.noteColor);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Convert to PDF\");\n};\n\nexport default ConvertToPDF;","map":{"version":3,"sources":["/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/Editor/ToolBarOptions/ConvertToPDF.js"],"names":["Button","React","axios","ConvertToPDF","props","renderPDF","noteID","noteHTML","noteColor","parsedHTML","document","body","style","backgroundColor","get","headers","params","then","response","window","open","request","responseURL"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,WAASC,SAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgD;AAC5C,QAAMC,UAAU,GAAG,0CAAkCD,SAAlC,aAAoDD,QAApD,GAA+D,SAAlF;AACAG,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAU,iCAAV,EAA6C;AAAEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAAX;AAAmEC,MAAAA,MAAM,EAAE;AAAE,kBAAWV,MAAb;AAAqB,oBAAaG;AAAlC;AAA3E,KAA7C,EAA0KQ,IAA1K,CAA+K,UAACC,QAAD,EAAc;AACzLC,MAAAA,MAAM,CAACC,IAAP,CAAYF,QAAQ,CAACG,OAAT,CAAiBC,WAA7B;AACH,KAFD;AAIH;;AACD,SACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAE,gBADf;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMjB,SAAS,CAACD,KAAK,CAACE,MAAP,EAAeF,KAAK,CAACG,QAArB,EAA+BH,KAAK,CAACI,SAArC,CAAf;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAOH,CAhBD;;AAkBA,eAAeL,YAAf","sourcesContent":["import {Button} from \"antd\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nconst ConvertToPDF = (props) => {\n    function renderPDF(noteID, noteHTML, noteColor) {\n        const parsedHTML = `<body style=\"background-color: ${noteColor};\" >` + noteHTML + \"</body>\"\n        document.body.style.backgroundColor = \"#f5f5f5\"\n        axios.get('http://127.0.0.1:5000/renderPDF', { headers: { 'Content-Type': 'application/x-www-form-urlencoded'}, params: { 'noteID' : noteID, 'noteHTML' : parsedHTML } }).then((response) => {\n            window.open(response.request.responseURL)\n        });\n\n    }\n    return (\n        <Button\n            className={'convert-to-pdf'}\n            onClick={() => renderPDF(props.noteID, props.noteHTML, props.noteColor)}>\n            Convert to PDF\n        </Button>\n    );\n}\n\nexport default ConvertToPDF;"]},"metadata":{},"sourceType":"module"}