{"ast":null,"code":"import ReactDOM from 'react-dom';\nimport ExecutionEnvironment from 'exenv';\nimport is from 'is-lite';\nimport scroll from 'scroll';\nimport scrollDoc from 'scroll-doc';\nimport getScrollParent from 'scrollparent';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport treeChanges from 'tree-changes';\nimport isRequiredIf from 'react-proptype-conditional-require';\nimport Floater from 'react-floater';\nvar STATUS = {\n  IDLE: 'idle',\n  READY: 'ready',\n  WAITING: 'waiting',\n  RUNNING: 'running',\n  PAUSED: 'paused',\n  SKIPPED: 'skipped',\n  FINISHED: 'finished',\n  ERROR: 'error'\n};\nvar ACTIONS = {\n  INIT: 'init',\n  START: 'start',\n  STOP: 'stop',\n  RESET: 'reset',\n  RESTART: 'restart',\n  PREV: 'prev',\n  NEXT: 'next',\n  GO: 'go',\n  INDEX: 'index',\n  CLOSE: 'close',\n  SKIP: 'skip',\n  UPDATE: 'update'\n};\nvar LIFECYCLE = {\n  INIT: 'init',\n  READY: 'ready',\n  BEACON: 'beacon',\n  TOOLTIP: 'tooltip',\n  COMPLETE: 'complete',\n  ERROR: 'error'\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar canUseDOM = ExecutionEnvironment.canUseDOM;\nvar isReact16 = ReactDOM.createPortal !== undefined;\n/**\n * Convert hex to RGB\n *\n * @param {string} hex\n * @returns {Array}\n */\n\nfunction hexToRGB(hex) {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var properHex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(properHex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : null;\n}\n/**\n * Get the current browser\n *\n * @returns {String}\n */\n\n\nfunction getBrowser() {\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    return 'node';\n  }\n\n  if (document.documentMode) {\n    return 'ie';\n  }\n\n  if (/Edge/.test(navigator.userAgent)) {\n    return 'edge';\n  } // Opera 8.0+\n\n\n  if (Boolean(window.opera) || navigator.userAgent.indexOf(' OPR/') >= 0) {\n    return 'opera';\n  } // Firefox 1.0+\n\n\n  if (typeof window.InstallTrigger !== 'undefined') {\n    return 'firefox';\n  } // Chrome 1+\n\n\n  if (window.chrome) {\n    return 'chrome';\n  } // Safari (and Chrome iOS, Firefox iOS)\n\n\n  if (/(Version\\/([0-9._]+).*Safari|CriOS|FxiOS| Mobile\\/)/.test(navigator.userAgent)) {\n    return 'safari';\n  }\n\n  return navigator.userAgent;\n}\n/**\n * Detect legacy browsers\n *\n * @returns {boolean}\n */\n\n\nfunction isLegacy() {\n  return !(['chrome', 'safari', 'firefox', 'opera'].indexOf(getBrowser()) !== -1);\n}\n/**\n * Log method calls if debug is enabled\n *\n * @private\n * @param {Object}       arg\n * @param {string}       arg.title    - The title the logger was called from\n * @param {Object|Array} [arg.data]   - The data to be logged\n * @param {boolean}      [arg.warn]  - If true, the message will be a warning\n * @param {boolean}      [arg.debug] - Nothing will be logged unless debug is true\n */\n\n\nfunction log(_ref) {\n  var title = _ref.title,\n      data = _ref.data,\n      _ref$warn = _ref.warn,\n      warn = _ref$warn === undefined ? false : _ref$warn,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === undefined ? false : _ref$debug;\n  /* eslint-disable no-console */\n\n  var logFn = warn ? console.warn || console.error : console.log;\n\n  if (debug && title && data) {\n    console.groupCollapsed('%creact-joyride: ' + title, 'color: #ff0044; font-weight: bold; font-size: 12px;');\n\n    if (Array.isArray(data)) {\n      data.forEach(function (d) {\n        if (is.plainObject(d) && d.key) {\n          logFn.apply(console, [d.key, d.value]);\n        } else {\n          logFn.apply(console, [d]);\n        }\n      });\n    } else {\n      logFn.apply(console, [data]);\n    }\n\n    console.groupEnd();\n  }\n  /* eslint-enable */\n\n}\n\nfunction hasValidKeys(value, keys) {\n  if (!is.plainObject(value) || !is.array(keys)) {\n    return false;\n  }\n\n  var validKeys = keys;\n\n  if (is.string(keys)) {\n    validKeys = [keys];\n  }\n\n  return Object.keys(value).every(function (d) {\n    return validKeys.indexOf(d) !== -1;\n  });\n}\n\nfunction isEqual(a, b) {\n  var p = void 0;\n  var t = void 0;\n\n  for (p in a) {\n    if (Object.prototype.hasOwnProperty.call(a, p)) {\n      if (typeof b[p] === 'undefined') {\n        return false;\n      }\n\n      if (b[p] && !a[p]) {\n        return false;\n      }\n\n      t = _typeof(a[p]);\n\n      if (t === 'object' && !isEqual(a[p], b[p])) {\n        return false;\n      }\n\n      if (t === 'function' && (typeof b[p] === 'undefined' || a[p].toString() !== b[p].toString())) {\n        return false;\n      }\n\n      if (a[p] !== b[p]) {\n        return false;\n      }\n    }\n  }\n\n  for (p in b) {\n    if (typeof a[p] === 'undefined') {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar defaultState = {\n  action: '',\n  controlled: false,\n  index: 0,\n  lifecycle: LIFECYCLE.INIT,\n  size: 0,\n  status: STATUS.IDLE\n};\nvar validKeys = ['action', 'index', 'lifecycle', 'status'];\n\nfunction createStore(props) {\n  var store = new Map();\n  var data = new Map();\n\n  var Store = function () {\n    function Store() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$continuous = _ref.continuous,\n          continuous = _ref$continuous === undefined ? false : _ref$continuous,\n          stepIndex = _ref.stepIndex,\n          _ref$steps = _ref.steps,\n          steps = _ref$steps === undefined ? [] : _ref$steps;\n\n      classCallCheck(this, Store);\n\n      _initialiseProps.call(this);\n\n      this.setState({\n        action: ACTIONS.INIT,\n        controlled: is.number(stepIndex),\n        continuous: continuous,\n        index: is.number(stepIndex) ? stepIndex : 0,\n        lifecycle: LIFECYCLE.INIT,\n        status: steps.length ? STATUS.READY : STATUS.IDLE\n      }, true);\n      this.setSteps(steps);\n    }\n\n    createClass(Store, [{\n      key: 'addListener',\n      value: function addListener(listener) {\n        this.listener = listener;\n      }\n    }, {\n      key: 'setState',\n      value: function setState(nextState) {\n        var initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var state = this.getState();\n\n        var _state$nextState = _extends({}, state, nextState),\n            action = _state$nextState.action,\n            index = _state$nextState.index,\n            lifecycle = _state$nextState.lifecycle,\n            status = _state$nextState.status;\n\n        store.set('action', action);\n        store.set('index', index);\n        store.set('lifecycle', lifecycle);\n        store.set('status', status);\n\n        if (initial) {\n          store.set('controlled', nextState.controlled);\n          store.set('continuous', nextState.continuous);\n        }\n        /* istanbul ignore else */\n\n\n        if (this.listener && this.hasUpdatedState(state)) {\n          // console.log('▶ ▶ ▶ NEW STATE', this.getState());\n          this.listener(this.getState());\n        }\n      }\n    }, {\n      key: 'getState',\n      value: function getState() {\n        if (!store.size) {\n          return _extends({}, defaultState);\n        }\n\n        var index = parseInt(store.get('index'), 10);\n        var steps = this.getSteps();\n        var size = steps.length;\n        return {\n          action: store.get('action'),\n          controlled: store.get('controlled'),\n          index: index,\n          lifecycle: store.get('lifecycle'),\n          size: size,\n          status: store.get('status')\n        };\n      }\n    }, {\n      key: 'getNextState',\n      value: function getNextState(state) {\n        var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var _getState = this.getState(),\n            action = _getState.action,\n            controlled = _getState.controlled,\n            index = _getState.index,\n            size = _getState.size,\n            status = _getState.status;\n\n        var newIndex = is.number(state.index) ? state.index : index;\n        var nextIndex = controlled && !force ? index : Math.min(Math.max(newIndex, 0), size);\n        return {\n          action: state.action || action,\n          index: nextIndex,\n          lifecycle: state.lifecycle || LIFECYCLE.INIT,\n          status: nextIndex === size ? STATUS.FINISHED : state.status || status\n        };\n      }\n    }, {\n      key: 'hasUpdatedState',\n      value: function hasUpdatedState(oldState) {\n        var before = JSON.stringify(oldState);\n        var after = JSON.stringify(this.getState());\n        return before !== after;\n      }\n    }, {\n      key: 'getSteps',\n      value: function getSteps() {\n        var steps = data.get('steps');\n        return Array.isArray(steps) ? steps : [];\n      }\n    }, {\n      key: 'getHelpers',\n      value: function getHelpers() {\n        return {\n          start: this.start,\n          stop: this.stop,\n          restart: this.restart,\n          reset: this.reset,\n          prev: this.prev,\n          next: this.next,\n          go: this.go,\n          index: this.index,\n          close: this.close,\n          skip: this.skip,\n          info: this.info\n        };\n      }\n    }]);\n    return Store;\n  }();\n\n  var _initialiseProps = function _initialiseProps() {\n    var _this = this;\n\n    this.setSteps = function (steps) {\n      var _getState2 = _this.getState(),\n          size = _getState2.size,\n          status = _getState2.status;\n\n      data.set('steps', steps);\n\n      if (status === STATUS.WAITING && !size && steps.length) {\n        _this.setState({\n          status: STATUS.RUNNING\n        });\n      }\n    };\n\n    this.update = function (state) {\n      if (!hasValidKeys(state, validKeys)) {\n        throw new Error('state is not valid');\n      }\n\n      _this.setState(_extends({}, _this.getNextState(_extends({}, _this.getState(), state, {\n        action: state.action || ACTIONS.UPDATE\n      }), true)));\n    };\n\n    this.steps = function (nextSteps) {\n      if (!is.array(nextSteps)) return;\n\n      _this.setSteps(nextSteps);\n    };\n\n    this.start = function (nextIndex) {\n      var _getState3 = _this.getState(),\n          index = _getState3.index,\n          size = _getState3.size;\n\n      _this.setState(_extends({}, _this.getNextState({\n        action: ACTIONS.START,\n        index: is.number(nextIndex) ? nextIndex : index\n      }, true), {\n        status: size ? STATUS.RUNNING : STATUS.WAITING\n      }));\n    };\n\n    this.stop = function () {\n      var advance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var _getState4 = _this.getState(),\n          index = _getState4.index,\n          status = _getState4.status;\n\n      if ([STATUS.FINISHED, STATUS.SKIPPED].indexOf(status) !== -1) return;\n\n      _this.setState(_extends({}, _this.getNextState({\n        action: ACTIONS.STOP,\n        index: index + (advance ? 1 : 0)\n      }), {\n        status: STATUS.PAUSED\n      }));\n    };\n\n    this.restart = function () {\n      var _getState5 = _this.getState(),\n          controlled = _getState5.controlled;\n\n      if (controlled) return;\n\n      _this.setState(_extends({}, _this.getNextState({\n        action: ACTIONS.RESTART,\n        index: 0\n      }), {\n        status: STATUS.RUNNING\n      }));\n    };\n\n    this.reset = function () {\n      var _getState6 = _this.getState(),\n          controlled = _getState6.controlled;\n\n      if (controlled) return;\n\n      _this.setState(_extends({}, _this.getNextState({\n        action: ACTIONS.RESET,\n        index: 0\n      }), {\n        status: STATUS.READY\n      }));\n    };\n\n    this.prev = function () {\n      var _getState7 = _this.getState(),\n          index = _getState7.index,\n          status = _getState7.status;\n\n      if (status !== STATUS.RUNNING) return;\n\n      _this.setState(_extends({}, _this.getNextState({\n        action: ACTIONS.PREV,\n        index: index - 1\n      })));\n    };\n\n    this.next = function () {\n      var _getState8 = _this.getState(),\n          index = _getState8.index,\n          status = _getState8.status;\n\n      if (status !== STATUS.RUNNING) return;\n\n      _this.setState(_this.getNextState({\n        action: ACTIONS.NEXT,\n        index: index + 1\n      }));\n    };\n\n    this.go = function (number) {\n      var _getState9 = _this.getState(),\n          index = _getState9.index,\n          status = _getState9.status;\n\n      if (status !== STATUS.RUNNING) return;\n\n      _this.setState(_extends({}, _this.getNextState({\n        action: ACTIONS.GO,\n        index: index + number\n      })));\n    };\n\n    this.index = function (nextIndex) {\n      var _getState10 = _this.getState(),\n          status = _getState10.status;\n\n      if (status !== STATUS.RUNNING) return;\n\n      var step = _this.getSteps()[nextIndex];\n\n      _this.setState(_extends({}, _this.getNextState({\n        action: ACTIONS.INDEX,\n        index: nextIndex\n      }), {\n        status: step ? status : STATUS.FINISHED\n      }));\n    };\n\n    this.close = function () {\n      var _getState11 = _this.getState(),\n          index = _getState11.index,\n          status = _getState11.status;\n\n      if (status !== STATUS.RUNNING) return;\n\n      _this.setState(_extends({}, _this.getNextState({\n        action: ACTIONS.CLOSE,\n        index: index + 1\n      })));\n    };\n\n    this.skip = function () {\n      var _getState12 = _this.getState(),\n          status = _getState12.status;\n\n      if (status !== STATUS.RUNNING) return;\n\n      _this.setState({\n        action: ACTIONS.SKIP,\n        lifecycle: LIFECYCLE.INIT,\n        status: STATUS.SKIPPED\n      });\n    };\n\n    this.info = function () {\n      return _this.getState();\n    };\n  };\n\n  return new Store(props);\n}\n/**\n * Find the bounding client rect\n *\n * @private\n * @param {HTMLElement} element - The target element\n * @returns {Object}\n */\n\n\nfunction getClientRect(element) {\n  if (!element) {\n    return {};\n  }\n\n  return element.getBoundingClientRect();\n}\n/**\n * Helper function to get the browser-normalized \"document height\"\n * @returns {Number}\n */\n\n\nfunction getDocumentHeight() {\n  var _document = document,\n      body = _document.body,\n      html = _document.documentElement;\n\n  if (!body || !html) {\n    return 0;\n  }\n\n  return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n}\n\nfunction getStyleComputedProperty(el) {\n  if (!el || el.nodeType !== 1) {\n    return {};\n  }\n\n  return getComputedStyle(el);\n}\n\nfunction hasCustomScrollParent(element) {\n  if (!element) {\n    return false;\n  }\n\n  return getScrollParent(element) !== scrollDoc();\n}\n\nfunction hasCustomOffsetParent(element) {\n  return element.offsetParent !== document.body;\n}\n\nfunction isFixed(el) {\n  if (!el || !(el instanceof HTMLElement)) {\n    return false;\n  }\n\n  var nodeName = el.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(el).position === 'fixed') {\n    return true;\n  }\n\n  return isFixed(el.parentNode);\n}\n/**\n * Get the scrollTop position\n *\n * @param {HTMLElement} element\n * @param {number} offset\n *\n * @returns {number}\n */\n\n\nfunction getScrollTo(element, offset) {\n  if (!element) {\n    return 0;\n  }\n\n  var parent = getScrollParent(element);\n  var top = element.offsetTop;\n\n  if (hasCustomScrollParent(element) && !hasCustomOffsetParent(element)) {\n    top -= parent.offsetTop;\n  }\n\n  return Math.floor(top - offset);\n}\n/**\n * Find and return the target DOM element based on a step's 'target'.\n *\n * @private\n * @param {string|HTMLElement} element\n *\n * @returns {HTMLElement|undefined}\n */\n\n\nfunction getElement(element) {\n  if (typeof element !== 'string') {\n    return element;\n  }\n\n  return element ? document.querySelector(element) : null;\n}\n/**\n * Find and return the target DOM element based on a step's 'target'.\n *\n * @private\n * @param {string|HTMLElement} element\n * @param {number} offset\n *\n * @returns {HTMLElement|undefined}\n */\n\n\nfunction getElementPosition(element, offset) {\n  var elementRect = getClientRect(element);\n  var scrollParent = getScrollParent(element);\n  var hasScrollParent = hasCustomScrollParent(element);\n  var top = elementRect.top + (!hasScrollParent && !isFixed(element) ? scrollParent.scrollTop : 0);\n  return Math.floor(top - offset);\n}\n\nfunction scrollTo(value) {\n  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scrollDoc();\n  return new Promise(function (resolve, reject) {\n    var scrollTop = element.scrollTop;\n    var limit = value > scrollTop ? value - scrollTop : scrollTop - value;\n    scroll.top(element, value, {\n      duration: limit < 100 ? 50 : 300\n    }, function (error) {\n      if (error && error.message !== 'Element already at target scroll position') {\n        return reject(error);\n      }\n\n      return resolve();\n    });\n  });\n}\n\nvar defaultOptions = {\n  arrowColor: '#fff',\n  backgroundColor: '#fff',\n  beaconSize: 36,\n  overlayColor: 'rgba(0, 0, 0, 0.5)',\n  primaryColor: '#f04',\n  spotlightShadow: '0 0 15px rgba(0, 0, 0, 0.5)',\n  textColor: '#333',\n  zIndex: 100\n};\nvar buttonReset = {\n  backgroundColor: 'transparent',\n  border: 0,\n  borderRadius: 0,\n  color: '#555',\n  cursor: 'pointer',\n  lineHeight: 1,\n  padding: 8,\n  WebkitAppearance: 'none'\n};\nvar spotlight = {\n  borderRadius: 4,\n  position: 'absolute'\n};\n\nfunction getStyles(stepStyles) {\n  var options = deepmerge(defaultOptions, stepStyles.options || {});\n  var width = 290;\n\n  if (window.innerWidth > 480) {\n    width = 380;\n  } else if (window.innerWidth > 768) {\n    width = 490;\n  }\n\n  if (options.width) {\n    if (window.innerWidth < options.width) {\n      width = window.innerWidth - 30;\n    } else {\n      width = options.width; //eslint-disable-line prefer-destructuring\n    }\n  }\n\n  var overlay = {\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    zIndex: options.zIndex\n  };\n  var defaultStyles = {\n    beacon: _extends({}, buttonReset, {\n      display: 'inline-block',\n      height: options.beaconSize,\n      position: 'relative',\n      width: options.beaconSize,\n      zIndex: options.zIndex\n    }),\n    beaconInner: {\n      animation: 'joyride-beacon-inner 1.2s infinite ease-in-out',\n      backgroundColor: options.primaryColor,\n      borderRadius: '50%',\n      display: 'block',\n      height: '50%',\n      left: '50%',\n      opacity: 0.7,\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: '50%'\n    },\n    beaconOuter: {\n      animation: 'joyride-beacon-outer 1.2s infinite ease-in-out',\n      backgroundColor: 'rgba(' + hexToRGB(options.primaryColor).join(',') + ', 0.2)',\n      border: '2px solid ' + options.primaryColor,\n      borderRadius: '50%',\n      boxSizing: 'border-box',\n      display: 'block',\n      height: '100%',\n      left: 0,\n      opacity: 0.9,\n      position: 'absolute',\n      top: 0,\n      transformOrigin: 'center',\n      width: '100%'\n    },\n    tooltip: {\n      backgroundColor: options.backgroundColor,\n      borderRadius: 5,\n      boxSizing: 'border-box',\n      color: options.textColor,\n      fontSize: 16,\n      maxWidth: '100%',\n      padding: 15,\n      position: 'relative',\n      width: width\n    },\n    tooltipContainer: {\n      lineHeight: 1.4,\n      textAlign: 'center'\n    },\n    tooltipTitle: {\n      fontSize: 18,\n      margin: '0 0 10px 0'\n    },\n    tooltipContent: {\n      padding: '20px 10px'\n    },\n    tooltipFooter: {\n      alignItems: 'center',\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: 15\n    },\n    buttonNext: _extends({}, buttonReset, {\n      backgroundColor: options.primaryColor,\n      borderRadius: 4,\n      color: '#fff'\n    }),\n    buttonBack: _extends({}, buttonReset, {\n      color: options.primaryColor,\n      marginLeft: 'auto',\n      marginRight: 5\n    }),\n    buttonClose: _extends({}, buttonReset, {\n      color: options.textColor,\n      height: 14,\n      padding: 15,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: 14\n    }),\n    buttonSkip: _extends({}, buttonReset, {\n      color: options.textColor,\n      fontSize: 14\n    }),\n    overlay: _extends({}, overlay, {\n      backgroundColor: options.overlayColor,\n      mixBlendMode: 'hard-light'\n    }),\n    overlayLegacy: _extends({}, overlay),\n    spotlight: _extends({}, spotlight, {\n      backgroundColor: 'gray'\n    }),\n    spotlightLegacy: _extends({}, spotlight, {\n      boxShadow: '0 0 0 9999px ' + options.overlayColor + ', ' + options.spotlightShadow\n    }),\n    floaterStyles: {\n      arrow: {\n        color: options.arrowColor\n      },\n      floater: {\n        zIndex: options.zIndex\n      }\n    },\n    options: options\n  };\n  return deepmerge(defaultStyles, stepStyles || {});\n}\n\nvar DEFAULTS = {\n  floaterProps: {\n    options: {\n      preventOverflow: {\n        boundariesElement: 'scrollParent'\n      }\n    },\n    wrapperOptions: {\n      offset: -18,\n      position: true\n    }\n  },\n  locale: {\n    back: 'Back',\n    close: 'Close',\n    last: 'Last',\n    next: 'Next',\n    open: 'Open',\n    skip: 'Skip'\n  },\n  step: {\n    event: 'click',\n    placement: 'bottom',\n    offset: 10\n  }\n};\n/**\n * Validate if a step is valid\n *\n * @param {Object} step - A step object\n * @param {boolean} debug\n *\n * @returns {boolean} - True if the step is valid, false otherwise\n */\n\nfunction validateStep(step) {\n  var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!is.plainObject(step)) {\n    log({\n      title: 'validateStep',\n      data: 'step must be an object',\n      warn: true,\n      debug: debug\n    });\n    return false;\n  }\n\n  if (!step.target) {\n    log({\n      title: 'validateStep',\n      data: 'target is missing from the step',\n      warn: true,\n      debug: debug\n    });\n    return false;\n  }\n\n  return true;\n}\n/**\n * Validate if steps is valid\n *\n * @param {Array} steps - A steps array\n * @param {boolean} debug\n *\n * @returns {boolean} - True if the steps are valid, false otherwise\n */\n\n\nfunction validateSteps(steps) {\n  var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!is.array(steps)) {\n    log({\n      title: 'validateSteps',\n      data: 'steps must be an array',\n      warn: true,\n      debug: debug\n    });\n    return false;\n  }\n\n  return steps.every(function (d) {\n    return validateStep(d, debug);\n  });\n}\n\nfunction getTourProps(props) {\n  var sharedTourProps = ['beaconComponent', 'disableCloseOnEsc', 'disableOverlay', 'disableOverlayClose', 'disableScrolling', 'floaterProps', 'hideBackButton', 'locale', 'showProgress', 'showSkipButton', 'spotlightClicks', 'spotlightPadding', 'styles', 'tooltipComponent'];\n  return Object.keys(props).filter(function (d) {\n    return sharedTourProps.indexOf(d) !== -1;\n  }).reduce(function (acc, i) {\n    acc[i] = props[i]; //eslint-disable-line react/destructuring-assignment\n\n    return acc;\n  }, {});\n}\n\nfunction getMergedStep(step, props) {\n  if (!step) return undefined;\n  var mergedStep = deepmerge.all([getTourProps(props), DEFAULTS.step, step]);\n  var mergedStyles = getStyles(deepmerge(props.styles || {}, step.styles || {}));\n  var scrollParent = hasCustomScrollParent(getElement(step.target));\n  var floaterProps = deepmerge.all([props.floaterProps || {}, DEFAULTS.floaterProps, mergedStep.floaterProps || {}]); // Set react-floater props\n\n  floaterProps.offset = mergedStep.offset;\n  floaterProps.styles = deepmerge(floaterProps.styles || {}, mergedStyles.floaterStyles || {});\n  delete mergedStyles.floaterStyles;\n\n  if (mergedStep.floaterProps && mergedStep.floaterProps.offset) {\n    floaterProps.offset = mergedStep.floaterProps.offset;\n  }\n\n  if (!mergedStep.disableScrolling) {\n    floaterProps.offset += props.spotlightPadding || step.spotlightPadding || 0;\n  }\n\n  if (step.placementBeacon) {\n    floaterProps.wrapperOptions.placement = step.placementBeacon;\n  }\n\n  if (scrollParent) {\n    floaterProps.options.preventOverflow.boundariesElement = 'window';\n  }\n\n  return _extends({}, mergedStep, {\n    locale: deepmerge.all([DEFAULTS.locale, props.locale || {}, mergedStep.locale || {}]),\n    floaterProps: floaterProps,\n    styles: mergedStyles\n  });\n}\n\nvar EVENTS = {\n  TOUR_START: 'tour:start',\n  STEP_BEFORE: 'step:before',\n  BEACON: 'beacon',\n  TOOLTIP: 'tooltip',\n  TOOLTIP_CLOSE: 'close',\n  STEP_AFTER: 'step:after',\n  TOUR_END: 'tour:end',\n  TOUR_STATUS: 'tour:status',\n  TARGET_NOT_FOUND: 'error:target_not_found',\n  ERROR: 'error'\n};\nvar validTabNodes = /input|select|textarea|button|object/;\nvar TAB_KEY = 9;\nvar modalElement = null;\n\nfunction isHidden(element) {\n  var noSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;\n  if (noSize && !element.innerHTML) return true;\n  var style = window.getComputedStyle(element);\n  return noSize ? style.getPropertyValue('overflow') !== 'visible' : style.getPropertyValue('display') === 'none';\n}\n\nfunction isVisible(element) {\n  var parentElement = element;\n\n  while (parentElement) {\n    if (parentElement === document.body) break;\n    if (isHidden(parentElement)) return false;\n    parentElement = parentElement.parentNode;\n  }\n\n  return true;\n}\n\nfunction canHaveFocus(element, isTabIndexNotNaN) {\n  var nodeName = element.nodeName.toLowerCase();\n  var res = validTabNodes.test(nodeName) && !element.disabled || (nodeName === 'a' ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);\n  return res && isVisible(element);\n}\n\nfunction canBeTabbed(element) {\n  var tabIndex = element.getAttribute('tabindex');\n  if (tabIndex === null) tabIndex = undefined;\n  var isTabIndexNaN = isNaN(tabIndex);\n  return (isTabIndexNaN || tabIndex >= 0) && canHaveFocus(element, !isTabIndexNaN);\n}\n\nfunction findValidTabElements(element) {\n  return [].slice.call(element.querySelectorAll('*'), 0).filter(canBeTabbed);\n}\n\nfunction interceptTab(node, event) {\n  var elements = findValidTabElements(node);\n  var shiftKey = event.shiftKey;\n\n  if (!elements.length) {\n    event.preventDefault();\n    return;\n  }\n\n  var x = elements.indexOf(document.activeElement);\n\n  if (x === -1 || !shiftKey && x + 1 === elements.length) {\n    x = 0;\n  } else {\n    x += shiftKey ? -1 : 1;\n  }\n\n  event.preventDefault();\n  elements[x].focus();\n}\n\nfunction handleKeyDown(e) {\n  if (!modalElement) {\n    return;\n  }\n\n  if (e.keyCode === TAB_KEY) {\n    interceptTab(modalElement, e);\n  }\n}\n\nfunction setScope(element) {\n  modalElement = element;\n  window.addEventListener('keydown', handleKeyDown, false);\n}\n\nfunction removeScope() {\n  modalElement = null;\n  window.removeEventListener('keydown', handleKeyDown);\n}\n\nvar JoyrideBeacon = function (_React$Component) {\n  inherits(JoyrideBeacon, _React$Component);\n\n  function JoyrideBeacon(props) {\n    classCallCheck(this, JoyrideBeacon);\n\n    var _this = possibleConstructorReturn(this, (JoyrideBeacon.__proto__ || Object.getPrototypeOf(JoyrideBeacon)).call(this, props));\n\n    if (!props.beaconComponent) {\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var style = document.createElement('style');\n      var css = '\\n@keyframes joyride-beacon-inner {\\n  20% {\\n    opacity: 0.9;\\n  }\\n\\n  90% {\\n    opacity: 0.7;\\n  }\\n}\\n\\n@keyframes joyride-beacon-outer {\\n  0% {\\n    transform: scale(1);\\n  }\\n\\n  45% {\\n    opacity: 0.7;\\n    transform: scale(0.75);\\n  }\\n\\n  100% {\\n    opacity: 0.9;\\n    transform: scale(1);\\n  }\\n}\\n      ';\n      style.type = 'text/css';\n      style.id = 'joyride-beacon-animation';\n      style.appendChild(document.createTextNode(css));\n      head.appendChild(style);\n    }\n\n    return _this;\n  }\n\n  createClass(JoyrideBeacon, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var style = document.getElementById('joyride-beacon-animation');\n\n      if (style) {\n        style.parentNode.removeChild(style);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          beaconComponent = _props.beaconComponent,\n          locale = _props.locale,\n          onClickOrHover = _props.onClickOrHover,\n          styles = _props.styles;\n      var props = {\n        'aria-label': locale.open,\n        onClick: onClickOrHover,\n        onMouseEnter: onClickOrHover,\n        title: locale.open\n      };\n      var component = void 0;\n\n      if (beaconComponent) {\n        if (React.isValidElement(beaconComponent)) {\n          component = React.cloneElement(beaconComponent, props);\n        } else {\n          component = beaconComponent(props);\n        }\n      } else {\n        component = React.createElement('button', _extends({\n          key: 'JoyrideBeacon',\n          className: 'joyride-beacon',\n          style: styles.beacon,\n          type: 'button'\n        }, props), React.createElement('span', {\n          style: styles.beaconInner\n        }), React.createElement('span', {\n          style: styles.beaconOuter\n        }));\n      }\n\n      return component;\n    }\n  }]);\n  return JoyrideBeacon;\n}(React.Component);\n\nJoyrideBeacon.propTypes = {\n  beaconComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  locale: PropTypes.object.isRequired,\n  onClickOrHover: PropTypes.func.isRequired,\n  styles: PropTypes.object.isRequired\n};\n\nvar JoyrideSpotlight = function JoyrideSpotlight(_ref) {\n  var styles = _ref.styles;\n  return React.createElement('div', {\n    key: 'JoyrideSpotlight',\n    className: 'joyride-spotlight',\n    style: styles\n  });\n};\n\nJoyrideSpotlight.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nvar Overlay = function (_React$Component) {\n  inherits(Overlay, _React$Component);\n\n  function Overlay(props) {\n    classCallCheck(this, Overlay);\n\n    var _this = possibleConstructorReturn(this, (Overlay.__proto__ || Object.getPrototypeOf(Overlay)).call(this, props));\n\n    _this.handleMouseMove = function (e) {\n      var mouseOverSpotlight = _this.state.mouseOverSpotlight;\n      var _this$stylesSpotlight = _this.stylesSpotlight,\n          height = _this$stylesSpotlight.height,\n          left = _this$stylesSpotlight.left,\n          position = _this$stylesSpotlight.position,\n          top = _this$stylesSpotlight.top,\n          width = _this$stylesSpotlight.width;\n      var offsetY = position === 'fixed' ? e.clientY : e.pageY;\n      var offsetX = position === 'fixed' ? e.clientX : e.pageX;\n      var inSpotlightHeight = offsetY >= top && offsetY <= top + height;\n      var inSpotlightWidth = offsetX >= left && offsetX <= left + width;\n      var inSpotlight = inSpotlightWidth && inSpotlightHeight;\n\n      if (inSpotlight !== mouseOverSpotlight) {\n        _this.setState({\n          mouseOverSpotlight: inSpotlight\n        });\n      }\n    };\n\n    _this.handleScroll = function () {\n      var isScrolling = _this.state.isScrolling;\n\n      if (!isScrolling) {\n        _this.setState({\n          isScrolling: true,\n          showSpotlight: false\n        });\n      }\n\n      clearTimeout(_this.scrollTimeout);\n      _this.scrollTimeout = setTimeout(function () {\n        clearTimeout(_this.scrollTimeout);\n\n        _this.setState({\n          isScrolling: false,\n          showSpotlight: true\n        });\n\n        _this.scrollParent.removeEventListener('scroll', _this.handleScroll);\n      }, 50);\n    };\n\n    _this.handleResize = function () {\n      clearTimeout(_this.resizeTimeout);\n      _this.resizeTimeout = setTimeout(function () {\n        clearTimeout(_this.resizeTimeout);\n\n        _this.forceUpdate();\n      }, 100);\n    };\n\n    _this.state = {\n      mouseOverSpotlight: false,\n      isScrolling: false,\n      showSpotlight: props.disableScrolling\n    };\n    return _this;\n  }\n\n  createClass(Overlay, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          disableScrolling = _props.disableScrolling,\n          target = _props.target;\n\n      if (!disableScrolling) {\n        var element = getElement(target);\n        this.scrollParent = hasCustomScrollParent(element) ? getScrollParent(element) : document;\n      }\n\n      window.addEventListener('resize', this.handleResize);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var disableScrolling = nextProps.disableScrolling,\n          lifecycle = nextProps.lifecycle,\n          spotlightClicks = nextProps.spotlightClicks;\n\n      var _treeChanges = treeChanges(this.props, nextProps),\n          changed = _treeChanges.changed,\n          changedTo = _treeChanges.changedTo;\n\n      if (!disableScrolling) {\n        if (changedTo('lifecycle', LIFECYCLE.TOOLTIP)) {\n          this.scrollParent.addEventListener('scroll', this.handleScroll, {\n            passive: true\n          });\n          setTimeout(function () {\n            var isScrolling = _this2.state.isScrolling;\n\n            if (!isScrolling) {\n              _this2.setState({\n                showSpotlight: true\n              });\n\n              _this2.scrollParent.removeEventListener('scroll', _this2.handleScroll);\n            }\n          }, 100);\n        }\n      }\n\n      if (changed('spotlightClicks') || changed('disableOverlay') || changed('lifecycle')) {\n        if (spotlightClicks && lifecycle === LIFECYCLE.TOOLTIP) {\n          window.addEventListener('mousemove', this.handleMouseMove, false);\n        } else if (lifecycle !== LIFECYCLE.TOOLTIP) {\n          window.removeEventListener('mousemove', this.handleMouseMove);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var disableScrolling = this.props.disableScrolling;\n      window.removeEventListener('mousemove', this.handleMouseMove);\n      window.removeEventListener('resize', this.handleResize);\n\n      if (!disableScrolling) {\n        clearTimeout(this.scrollTimeout);\n        this.scrollParent.removeEventListener('scroll', this.handleScroll);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          mouseOverSpotlight = _state.mouseOverSpotlight,\n          showSpotlight = _state.showSpotlight;\n      var _props2 = this.props,\n          disableOverlay = _props2.disableOverlay,\n          lifecycle = _props2.lifecycle,\n          onClickOverlay = _props2.onClickOverlay,\n          placement = _props2.placement,\n          styles = _props2.styles;\n\n      if (disableOverlay || lifecycle !== LIFECYCLE.TOOLTIP) {\n        return null;\n      }\n\n      var stylesOverlay = _extends({\n        cursor: disableOverlay ? 'default' : 'pointer',\n        height: getDocumentHeight(),\n        pointerEvents: mouseOverSpotlight ? 'none' : 'auto'\n      }, isLegacy() ? styles.overlayLegacy : styles.overlay);\n\n      var spotlight = placement !== 'center' && showSpotlight && React.createElement(JoyrideSpotlight, {\n        styles: this.stylesSpotlight\n      }); // Hack for Safari bug with mix-blend-mode with z-index\n\n      if (getBrowser() === 'safari') {\n        var mixBlendMode = stylesOverlay.mixBlendMode,\n            zIndex = stylesOverlay.zIndex,\n            safarOverlay = objectWithoutProperties(stylesOverlay, ['mixBlendMode', 'zIndex']);\n        spotlight = React.createElement('div', {\n          style: _extends({}, safarOverlay)\n        }, spotlight);\n        delete stylesOverlay.backgroundColor;\n      }\n\n      return React.createElement('div', {\n        className: 'joyride-overlay',\n        style: stylesOverlay,\n        onClick: onClickOverlay\n      }, spotlight);\n    }\n  }, {\n    key: 'stylesSpotlight',\n    get: function get$$1() {\n      var showSpotlight = this.state.showSpotlight;\n      var _props3 = this.props,\n          spotlightClicks = _props3.spotlightClicks,\n          spotlightPadding = _props3.spotlightPadding,\n          styles = _props3.styles,\n          target = _props3.target;\n      var element = getElement(target);\n      var elementRect = getClientRect(element);\n      var isFixedTarget = isFixed(element);\n      var top = getElementPosition(element, spotlightPadding);\n      return _extends({}, isLegacy() ? styles.spotlightLegacy : styles.spotlight, {\n        height: Math.round(elementRect.height + spotlightPadding * 2),\n        left: Math.round(elementRect.left - spotlightPadding),\n        opacity: showSpotlight ? 1 : 0,\n        pointerEvents: spotlightClicks ? 'none' : 'auto',\n        position: isFixedTarget ? 'fixed' : 'absolute',\n        top: top,\n        transition: 'opacity 0.2s',\n        width: Math.round(elementRect.width + spotlightPadding * 2)\n      });\n    }\n  }]);\n  return Overlay;\n}(React.Component);\n\nOverlay.propTypes = {\n  disableOverlay: PropTypes.bool.isRequired,\n  disableScrolling: PropTypes.bool.isRequired,\n  lifecycle: PropTypes.string.isRequired,\n  onClickOverlay: PropTypes.func.isRequired,\n  placement: PropTypes.string.isRequired,\n  spotlightClicks: PropTypes.bool.isRequired,\n  spotlightPadding: PropTypes.number,\n  styles: PropTypes.object.isRequired,\n  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nvar CloseBtn = function CloseBtn(_ref) {\n  var styles = _ref.styles,\n      props = objectWithoutProperties(_ref, ['styles']);\n  var color = styles.color,\n      height = styles.height,\n      width = styles.width,\n      style = objectWithoutProperties(styles, ['color', 'height', 'width']);\n  return React.createElement('button', _extends({\n    style: style,\n    type: 'button'\n  }, props), React.createElement('svg', {\n    width: typeof width === 'number' ? width + 'px' : width,\n    height: typeof height === 'number' ? height + 'px' : height,\n    viewBox: '0 0 18 18',\n    version: '1.1',\n    xmlns: 'http://www.w3.org/2000/svg',\n    preserveAspectRatio: 'xMidYMid'\n  }, React.createElement('g', null, React.createElement('path', {\n    d: 'M8.13911129,9.00268191 L0.171521827,17.0258467 C-0.0498027049,17.248715 -0.0498027049,17.6098394 0.171521827,17.8327545 C0.28204354,17.9443526 0.427188206,17.9998706 0.572051765,17.9998706 C0.71714958,17.9998706 0.862013139,17.9443526 0.972581703,17.8327545 L9.0000937,9.74924618 L17.0276057,17.8327545 C17.1384085,17.9443526 17.2832721,17.9998706 17.4281356,17.9998706 C17.5729992,17.9998706 17.718097,17.9443526 17.8286656,17.8327545 C18.0499901,17.6098862 18.0499901,17.2487618 17.8286656,17.0258467 L9.86135722,9.00268191 L17.8340066,0.973848225 C18.0553311,0.750979934 18.0553311,0.389855532 17.8340066,0.16694039 C17.6126821,-0.0556467968 17.254037,-0.0556467968 17.0329467,0.16694039 L9.00042166,8.25611765 L0.967006424,0.167268345 C0.745681892,-0.0553188426 0.387317931,-0.0553188426 0.165993399,0.167268345 C-0.0553311331,0.390136635 -0.0553311331,0.751261038 0.165993399,0.974176179 L8.13920499,9.00268191 L8.13911129,9.00268191 Z',\n    fill: color\n  }))));\n};\n\nCloseBtn.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nvar JoyrideTooltipContainer = function JoyrideTooltipContainer(_ref) {\n  var continuous = _ref.continuous,\n      backProps = _ref.backProps,\n      closeProps = _ref.closeProps,\n      primaryProps = _ref.primaryProps,\n      skipProps = _ref.skipProps,\n      index = _ref.index,\n      isLastStep = _ref.isLastStep,\n      setTooltipRef = _ref.setTooltipRef,\n      size = _ref.size,\n      step = _ref.step;\n  var content = step.content,\n      hideBackButton = step.hideBackButton,\n      locale = step.locale,\n      showProgress = step.showProgress,\n      showSkipButton = step.showSkipButton,\n      title = step.title,\n      styles = step.styles;\n  var back = locale.back,\n      close = locale.close,\n      last = locale.last,\n      next = locale.next,\n      skip = locale.skip;\n  var output = {\n    primary: close\n  };\n\n  if (continuous) {\n    if (isLastStep) {\n      output.primary = last;\n    } else {\n      output.primary = next;\n    }\n\n    if (showProgress) {\n      output.primary += ' (' + (index + 1) + '/' + size + ')';\n    }\n  }\n\n  if (showSkipButton && !isLastStep) {\n    output.skip = React.createElement('button', _extends({\n      style: styles.buttonSkip,\n      type: 'button'\n    }, skipProps), skip);\n  }\n\n  if (!hideBackButton && index > 0) {\n    output.back = React.createElement('button', _extends({\n      style: styles.buttonBack,\n      type: 'button'\n    }, backProps), back);\n  }\n\n  output.close = React.createElement(CloseBtn, _extends({}, closeProps, {\n    styles: styles.buttonClose\n  }));\n  return React.createElement('div', {\n    key: 'JoyrideTooltip',\n    ref: setTooltipRef,\n    style: styles.tooltip\n  }, React.createElement('div', {\n    style: styles.tooltipContainer\n  }, output.close, title && React.createElement('h4', {\n    style: styles.tooltipTitle\n  }, title), !!content && React.createElement('div', {\n    style: styles.tooltipContent\n  }, content)), React.createElement('div', {\n    style: styles.tooltipFooter\n  }, output.skip, output.back, React.createElement('button', _extends({\n    style: styles.buttonNext,\n    type: 'button'\n  }, primaryProps), output.primary)));\n};\n\nJoyrideTooltipContainer.propTypes = {\n  backProps: PropTypes.object.isRequired,\n  closeProps: PropTypes.object.isRequired,\n  continuous: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  isLastStep: PropTypes.bool.isRequired,\n  primaryProps: PropTypes.object.isRequired,\n  setTooltipRef: PropTypes.func.isRequired,\n  size: PropTypes.number.isRequired,\n  skipProps: PropTypes.object.isRequired,\n  step: PropTypes.object.isRequired\n};\n\nvar JoyrideTooltip = function (_React$Component) {\n  inherits(JoyrideTooltip, _React$Component);\n\n  function JoyrideTooltip() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, JoyrideTooltip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = JoyrideTooltip.__proto__ || Object.getPrototypeOf(JoyrideTooltip)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickBack = function (e) {\n      e.preventDefault();\n      var helpers = _this.props.helpers;\n      helpers.prev();\n    }, _this.handleClickClose = function (e) {\n      e.preventDefault();\n      var helpers = _this.props.helpers;\n      helpers.close();\n    }, _this.handleClickPrimary = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          continuous = _this$props.continuous,\n          helpers = _this$props.helpers;\n\n      if (!continuous) {\n        helpers.close();\n        return;\n      }\n\n      helpers.next();\n    }, _this.handleClickSkip = function (e) {\n      e.preventDefault();\n      var helpers = _this.props.helpers;\n      helpers.skip();\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(JoyrideTooltip, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          continuous = _props.continuous,\n          index = _props.index,\n          isLastStep = _props.isLastStep,\n          setTooltipRef = _props.setTooltipRef,\n          size = _props.size,\n          step = _props.step;\n      var content = step.content,\n          locale = step.locale,\n          title = step.title,\n          tooltipComponent = step.tooltipComponent;\n      var back = locale.back,\n          close = locale.close,\n          last = locale.last,\n          next = locale.next,\n          skip = locale.skip;\n      var primaryText = continuous ? next : close;\n\n      if (isLastStep) {\n        primaryText = last;\n      }\n\n      var component = void 0;\n      var buttonProps = {\n        backProps: {\n          'aria-label': back,\n          onClick: this.handleClickBack,\n          role: 'button',\n          title: back\n        },\n        closeProps: {\n          'aria-label': close,\n          onClick: this.handleClickClose,\n          role: 'button',\n          title: close\n        },\n        primaryProps: {\n          'aria-label': primaryText,\n          onClick: this.handleClickPrimary,\n          role: 'button',\n          title: primaryText\n        },\n        skipProps: {\n          'aria-label': skip,\n          onClick: this.handleClickSkip,\n          role: 'button',\n          title: skip\n        }\n      };\n\n      if (tooltipComponent) {\n        var renderProps = _extends({}, buttonProps, {\n          content: content,\n          continuous: continuous,\n          index: index,\n          isLastStep: isLastStep,\n          locale: locale,\n          setTooltipRef: setTooltipRef,\n          size: size,\n          title: title\n        });\n\n        if (React.isValidElement(tooltipComponent)) {\n          component = React.cloneElement(tooltipComponent, renderProps);\n        } else {\n          component = tooltipComponent(renderProps);\n        }\n      } else {\n        component = React.createElement(JoyrideTooltipContainer, _extends({\n          continuous: continuous,\n          index: index,\n          isLastStep: isLastStep,\n          setTooltipRef: setTooltipRef,\n          size: size,\n          step: step\n        }, buttonProps));\n      }\n\n      return component;\n    }\n  }]);\n  return JoyrideTooltip;\n}(React.Component);\n\nJoyrideTooltip.propTypes = {\n  continuous: PropTypes.bool.isRequired,\n  helpers: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  isLastStep: PropTypes.bool.isRequired,\n  setTooltipRef: PropTypes.func.isRequired,\n  size: PropTypes.number.isRequired,\n  step: PropTypes.object.isRequired\n};\n\nvar JoyridePortal = function (_React$Component) {\n  inherits(JoyridePortal, _React$Component);\n\n  function JoyridePortal(props) {\n    classCallCheck(this, JoyridePortal);\n\n    var _this = possibleConstructorReturn(this, (JoyridePortal.__proto__ || Object.getPrototypeOf(JoyridePortal)).call(this, props));\n\n    if (!canUseDOM) return possibleConstructorReturn(_this);\n    _this.node = document.createElement('div');\n\n    if (props.id) {\n      _this.node.id = props.id;\n    }\n\n    document.body.appendChild(_this.node);\n    return _this;\n  }\n\n  createClass(JoyridePortal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!canUseDOM) return;\n\n      if (!isReact16) {\n        this.renderReact15();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (!canUseDOM) return;\n\n      if (!isReact16) {\n        this.renderReact15();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (!canUseDOM || !this.node) return;\n\n      if (!isReact16) {\n        ReactDOM.unmountComponentAtNode(this.node);\n      }\n\n      document.body.removeChild(this.node);\n    }\n  }, {\n    key: 'renderReact15',\n    value: function renderReact15() {\n      if (!canUseDOM) return null;\n      var children = this.props.children;\n      ReactDOM.unstable_renderSubtreeIntoContainer(this, children, this.node);\n      return null;\n    }\n  }, {\n    key: 'renderReact16',\n    value: function renderReact16() {\n      if (!canUseDOM || !isReact16) return null;\n      var children = this.props.children;\n      return ReactDOM.createPortal(children, this.node);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!isReact16) {\n        return null;\n      }\n\n      return this.renderReact16();\n    }\n  }]);\n  return JoyridePortal;\n}(React.Component);\n\nJoyridePortal.propTypes = {\n  children: PropTypes.element,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nvar JoyrideStep = function (_React$Component) {\n  inherits(JoyrideStep, _React$Component);\n\n  function JoyrideStep() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, JoyrideStep);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = JoyrideStep.__proto__ || Object.getPrototypeOf(JoyrideStep)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickHoverBeacon = function (e) {\n      var _this$props = _this.props,\n          step = _this$props.step,\n          update = _this$props.update;\n\n      if (e.type === 'mouseenter' && step.event !== 'hover') {\n        return;\n      }\n\n      update({\n        lifecycle: LIFECYCLE.TOOLTIP\n      });\n    }, _this.handleClickOverlay = function () {\n      var _this$props2 = _this.props,\n          helpers = _this$props2.helpers,\n          step = _this$props2.step;\n\n      if (!step.disableOverlayClose) {\n        helpers.close();\n      }\n    }, _this.setTooltipRef = function (c) {\n      _this.tooltip = c;\n    }, _this.setPopper = function (popper, type) {\n      var _this$props3 = _this.props,\n          action = _this$props3.action,\n          getPopper = _this$props3.getPopper,\n          update = _this$props3.update;\n\n      if (type === 'wrapper') {\n        _this.beaconPopper = popper;\n      } else {\n        _this.tooltipPopper = popper;\n      }\n\n      getPopper(popper, type);\n\n      if (_this.beaconPopper && _this.tooltipPopper) {\n        update({\n          action: action === ACTIONS.CLOSE ? ACTIONS.CLOSE : action,\n          lifecycle: LIFECYCLE.READY\n        });\n      }\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(JoyrideStep, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          debug = _props.debug,\n          lifecycle = _props.lifecycle;\n      log({\n        title: 'step:' + lifecycle,\n        data: [{\n          key: 'props',\n          value: this.props\n        }],\n        debug: debug\n      });\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _props2 = this.props,\n          action = _props2.action,\n          continuous = _props2.continuous,\n          debug = _props2.debug,\n          index = _props2.index,\n          lifecycle = _props2.lifecycle,\n          step = _props2.step,\n          update = _props2.update;\n\n      var _treeChanges = treeChanges(this.props, nextProps),\n          changed = _treeChanges.changed,\n          changedFrom = _treeChanges.changedFrom;\n\n      var skipBeacon = continuous && action !== ACTIONS.CLOSE && (index > 0 || action === ACTIONS.PREV);\n\n      if (changedFrom('lifecycle', LIFECYCLE.INIT, LIFECYCLE.READY)) {\n        update({\n          lifecycle: step.disableBeacon || skipBeacon ? LIFECYCLE.TOOLTIP : LIFECYCLE.BEACON\n        });\n      }\n\n      if (changed('index')) {\n        log({\n          title: 'step:' + lifecycle,\n          data: [{\n            key: 'props',\n            value: this.props\n          }],\n          debug: debug\n        });\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props3 = this.props,\n          action = _props3.action,\n          callback = _props3.callback,\n          controlled = _props3.controlled,\n          index = _props3.index,\n          lifecycle = _props3.lifecycle,\n          size = _props3.size,\n          status = _props3.status,\n          step = _props3.step,\n          update = _props3.update;\n\n      var _treeChanges2 = treeChanges(prevProps, this.props),\n          changed = _treeChanges2.changed,\n          changedTo = _treeChanges2.changedTo,\n          changedFrom = _treeChanges2.changedFrom;\n\n      var state = {\n        action: action,\n        controlled: controlled,\n        index: index,\n        lifecycle: lifecycle,\n        size: size,\n        status: status\n      };\n      var isAfterAction = [ACTIONS.NEXT, ACTIONS.PREV, ACTIONS.SKIP, ACTIONS.CLOSE].indexOf(action) !== -1 && changed('action');\n      var hasChangedIndex = changed('index') && changedFrom('lifecycle', LIFECYCLE.TOOLTIP, LIFECYCLE.INIT);\n\n      if (!changed('status') && (hasChangedIndex || controlled && isAfterAction)) {\n        callback(_extends({}, state, {\n          index: prevProps.index,\n          lifecycle: LIFECYCLE.COMPLETE,\n          step: prevProps.step,\n          type: EVENTS.STEP_AFTER\n        }));\n      } // There's a step to use, but there's no target in the DOM\n\n\n      if (step) {\n        var hasRenderedTarget = !!getElement(step.target);\n\n        if (hasRenderedTarget) {\n          if (changedFrom('status', STATUS.READY, STATUS.RUNNING) || changed('index')) {\n            callback(_extends({}, state, {\n              step: step,\n              type: EVENTS.STEP_BEFORE\n            }));\n          }\n        }\n\n        if (!hasRenderedTarget) {\n          console.warn('Target not mounted', step); //eslint-disable-line no-console\n\n          callback(_extends({}, state, {\n            type: EVENTS.TARGET_NOT_FOUND,\n            step: step\n          }));\n\n          if (!controlled) {\n            update({\n              index: index + ([ACTIONS.PREV].indexOf(action) !== -1 ? -1 : 1)\n            });\n          }\n        }\n      }\n      /* istanbul ignore else */\n\n\n      if (changedTo('lifecycle', LIFECYCLE.BEACON)) {\n        callback(_extends({}, state, {\n          step: step,\n          type: EVENTS.BEACON\n        }));\n      }\n\n      if (changedTo('lifecycle', LIFECYCLE.TOOLTIP)) {\n        callback(_extends({}, state, {\n          step: step,\n          type: EVENTS.TOOLTIP\n        }));\n        setScope(this.tooltip);\n      }\n\n      if (changedFrom('lifecycle', LIFECYCLE.TOOLTIP, LIFECYCLE.INIT)) {\n        removeScope();\n      }\n\n      if (changedTo('lifecycle', LIFECYCLE.INIT)) {\n        delete this.beaconPopper;\n        delete this.tooltipPopper;\n      }\n    }\n    /**\n     * Beacon click/hover event listener\n     *\n     * @param {Event} e\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props4 = this.props,\n          continuous = _props4.continuous,\n          controlled = _props4.controlled,\n          debug = _props4.debug,\n          helpers = _props4.helpers,\n          index = _props4.index,\n          lifecycle = _props4.lifecycle,\n          size = _props4.size,\n          step = _props4.step;\n      var target = getElement(step.target);\n\n      if (!validateStep(step) || !is.domElement(target)) {\n        return null;\n      }\n\n      return React.createElement('div', {\n        key: 'JoyrideStep-' + index,\n        className: 'joyride-step'\n      }, React.createElement(JoyridePortal, null, React.createElement(Overlay, _extends({}, step, {\n        lifecycle: lifecycle,\n        onClickOverlay: this.handleClickOverlay\n      }))), React.createElement(Floater, _extends({\n        component: React.createElement(JoyrideTooltip, {\n          continuous: continuous,\n          controlled: controlled,\n          helpers: helpers,\n          index: index,\n          setTooltipRef: this.setTooltipRef,\n          size: size,\n          isLastStep: index + 1 === size,\n          step: step\n        }),\n        debug: debug,\n        getPopper: this.setPopper,\n        id: 'react-joyride:' + index,\n        isPositioned: step.isFixed || isFixed(target),\n        open: this.open,\n        placement: step.placement,\n        target: step.target\n      }, step.floaterProps), React.createElement(JoyrideBeacon, {\n        beaconComponent: step.beaconComponent,\n        locale: step.locale,\n        onClickOrHover: this.handleClickHoverBeacon,\n        styles: step.styles\n      })));\n    }\n  }, {\n    key: 'open',\n    get: function get$$1() {\n      var _props5 = this.props,\n          step = _props5.step,\n          lifecycle = _props5.lifecycle;\n      return !!(step.disableBeacon || lifecycle === LIFECYCLE.TOOLTIP);\n    }\n  }]);\n  return JoyrideStep;\n}(React.Component);\n\nJoyrideStep.propTypes = {\n  action: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  continuous: PropTypes.bool.isRequired,\n  controlled: PropTypes.bool.isRequired,\n  debug: PropTypes.bool.isRequired,\n  getPopper: PropTypes.func.isRequired,\n  helpers: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  lifecycle: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  status: PropTypes.string.isRequired,\n  step: PropTypes.shape({\n    beaconComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n    content: isRequiredIf(PropTypes.node, function (props) {\n      return !props.tooltipComponent && !props.title;\n    }),\n    disableBeacon: PropTypes.bool,\n    disableOverlay: PropTypes.bool,\n    disableOverlayClose: PropTypes.bool,\n    event: PropTypes.string,\n    floaterProps: PropTypes.shape({\n      offset: PropTypes.number\n    }),\n    hideBackButton: PropTypes.bool,\n    isFixed: PropTypes.bool,\n    locale: PropTypes.object,\n    offset: PropTypes.number.isRequired,\n    placement: PropTypes.oneOf(['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end', 'auto', 'center']),\n    spotlightClicks: PropTypes.bool,\n    spotlightPadding: PropTypes.number,\n    styles: PropTypes.object,\n    target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    title: PropTypes.node,\n    tooltipComponent: isRequiredIf(PropTypes.oneOfType([PropTypes.func, PropTypes.element]), function (props) {\n      return !props.content && !props.title;\n    })\n  }).isRequired,\n  update: PropTypes.func.isRequired\n};\n\nvar Joyride = function (_React$Component) {\n  inherits(Joyride, _React$Component);\n\n  function Joyride(props) {\n    classCallCheck(this, Joyride);\n\n    var _this = possibleConstructorReturn(this, (Joyride.__proto__ || Object.getPrototypeOf(Joyride)).call(this, props));\n\n    _this.callback = function (data) {\n      var callback = _this.props.callback;\n      /* istanbul ignore else */\n\n      if (is.function(callback)) {\n        callback(data);\n      }\n    };\n\n    _this.handleKeyboard = function (e) {\n      var _this$state = _this.state,\n          index = _this$state.index,\n          lifecycle = _this$state.lifecycle;\n      var steps = _this.props.steps;\n      var step = steps[index];\n      var intKey = window.Event ? e.which : e.keyCode;\n\n      if (lifecycle === LIFECYCLE.TOOLTIP) {\n        if (intKey === 27 && step && !step.disableCloseOnEsc) {\n          _this.store.close();\n        }\n      }\n    };\n\n    _this.syncState = function (state) {\n      _this.setState(state);\n    };\n\n    _this.getPopper = function (popper, type) {\n      if (type === 'wrapper') {\n        _this.beaconPopper = popper;\n      } else {\n        _this.tooltipPopper = popper;\n      }\n    };\n\n    _this.store = new createStore(_extends({}, props, {\n      controlled: props.run && is.number(props.stepIndex)\n    }));\n    _this.state = _this.store.getState();\n    _this.helpers = _this.store.getHelpers();\n    return _this;\n  }\n\n  createClass(Joyride, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!canUseDOM) return;\n      var _props = this.props,\n          debug = _props.debug,\n          disableCloseOnEsc = _props.disableCloseOnEsc,\n          run = _props.run,\n          steps = _props.steps;\n      var start = this.store.start;\n      log({\n        title: 'init',\n        data: [{\n          key: 'props',\n          value: this.props\n        }, {\n          key: 'state',\n          value: this.state\n        }],\n        debug: debug\n      }); // Sync the store to this component state.\n\n      this.store.addListener(this.syncState);\n\n      if (validateSteps(steps, debug) && run) {\n        start();\n      }\n      /* istanbul ignore else */\n\n\n      if (!disableCloseOnEsc) {\n        document.body.addEventListener('keydown', this.handleKeyboard, {\n          passive: true\n        });\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (!canUseDOM) return;\n      var _state = this.state,\n          action = _state.action,\n          status = _state.status;\n      var _props2 = this.props,\n          steps = _props2.steps,\n          stepIndex = _props2.stepIndex;\n      var debug = nextProps.debug,\n          run = nextProps.run,\n          nextSteps = nextProps.steps,\n          nextStepIndex = nextProps.stepIndex;\n      var _store = this.store,\n          setSteps = _store.setSteps,\n          start = _store.start,\n          stop = _store.stop,\n          update = _store.update;\n      var diffProps = !isEqual(this.props, nextProps);\n\n      var _treeChanges = treeChanges(this.props, nextProps),\n          changed = _treeChanges.changed;\n\n      if (diffProps) {\n        log({\n          title: 'props',\n          data: [{\n            key: 'nextProps',\n            value: nextProps\n          }, {\n            key: 'props',\n            value: this.props\n          }],\n          debug: debug\n        });\n        var stepsChanged = !isEqual(nextSteps, steps);\n        var stepIndexChanged = is.number(nextStepIndex) && changed('stepIndex');\n        /* istanbul ignore else */\n\n        if (changed('run')) {\n          if (run) {\n            start(nextStepIndex);\n          } else {\n            stop();\n          }\n        }\n\n        if (stepsChanged) {\n          if (validateSteps(nextSteps, debug)) {\n            setSteps(nextSteps);\n          } else {\n            console.warn('Steps are not valid', nextSteps); //eslint-disable-line no-console\n          }\n        }\n        /* istanbul ignore else */\n\n\n        if (stepIndexChanged) {\n          var nextAction = stepIndex < nextStepIndex ? ACTIONS.NEXT : ACTIONS.PREV;\n\n          if (action === ACTIONS.STOP) {\n            nextAction = ACTIONS.START;\n          }\n\n          if (!([STATUS.FINISHED, STATUS.SKIPPED].indexOf(status) !== -1)) {\n            update({\n              action: action === ACTIONS.CLOSE ? ACTIONS.CLOSE : nextAction,\n              index: nextStepIndex,\n              lifecycle: LIFECYCLE.INIT\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!canUseDOM) return;\n      var _state2 = this.state,\n          index = _state2.index,\n          lifecycle = _state2.lifecycle,\n          status = _state2.status;\n      var _props3 = this.props,\n          debug = _props3.debug,\n          steps = _props3.steps;\n\n      var _treeChanges2 = treeChanges(prevState, this.state),\n          changed = _treeChanges2.changed,\n          changedFrom = _treeChanges2.changedFrom,\n          changedTo = _treeChanges2.changedTo;\n\n      var diffState = !isEqual(prevState, this.state);\n      var step = getMergedStep(steps[index], this.props);\n\n      if (diffState) {\n        log({\n          title: 'state',\n          data: [{\n            key: 'state',\n            value: this.state\n          }, {\n            key: 'changed',\n            value: diffState\n          }, {\n            key: 'step',\n            value: step\n          }],\n          debug: debug\n        });\n        var currentIndex = index;\n\n        if (changed('status')) {\n          var type = EVENTS.TOUR_STATUS;\n\n          if (changedTo('status', STATUS.FINISHED) || changedTo('status', STATUS.SKIPPED)) {\n            type = EVENTS.TOUR_END; // Return the last step when the tour is finished\n\n            step = getMergedStep(steps[prevState.index], this.props);\n            currentIndex = prevState.index;\n          } else if (changedFrom('status', STATUS.READY, STATUS.RUNNING)) {\n            type = EVENTS.TOUR_START;\n          }\n\n          this.callback(_extends({}, this.state, {\n            index: currentIndex,\n            step: step,\n            type: type\n          }));\n        }\n\n        if (step) {\n          this.scrollToStep(prevState);\n\n          if (step.placement === 'center' && status === STATUS.RUNNING && lifecycle === LIFECYCLE.INIT) {\n            this.store.update({\n              lifecycle: LIFECYCLE.READY\n            });\n          }\n        }\n\n        if (changedTo('lifecycle', LIFECYCLE.INIT)) {\n          delete this.beaconPopper;\n          delete this.tooltipPopper;\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var disableCloseOnEsc = this.props.disableCloseOnEsc;\n      /* istanbul ignore else */\n\n      if (!disableCloseOnEsc) {\n        document.body.removeEventListener('keydown', this.handleKeyboard);\n      }\n    }\n  }, {\n    key: 'scrollToStep',\n    value: function scrollToStep(prevState) {\n      var _state3 = this.state,\n          index = _state3.index,\n          lifecycle = _state3.lifecycle,\n          status = _state3.status;\n      var _props4 = this.props,\n          debug = _props4.debug,\n          disableScrolling = _props4.disableScrolling,\n          scrollToFirstStep = _props4.scrollToFirstStep,\n          scrollOffset = _props4.scrollOffset,\n          steps = _props4.steps;\n      var step = getMergedStep(steps[index], this.props);\n\n      if (step) {\n        var target = getElement(step.target);\n        var shouldScroll = step && !disableScrolling && (!step.isFixed || !isFixed(target)) // fixed steps don't need to scroll\n        && prevState.lifecycle !== lifecycle && [LIFECYCLE.BEACON, LIFECYCLE.TOOLTIP].indexOf(lifecycle) !== -1 && (scrollToFirstStep || prevState.index !== index);\n\n        if (status === STATUS.RUNNING && shouldScroll) {\n          var hasCustomScroll = hasCustomScrollParent(target);\n          var scrollParent = getScrollParent(target);\n          var scrollY = Math.floor(getScrollTo(target, scrollOffset));\n          log({\n            title: 'scrollToStep',\n            data: [{\n              key: 'index',\n              value: index\n            }, {\n              key: 'lifecycle',\n              value: lifecycle\n            }, {\n              key: 'status',\n              value: status\n            }],\n            debug: debug\n          });\n\n          if (lifecycle === LIFECYCLE.BEACON && this.beaconPopper) {\n            var _beaconPopper = this.beaconPopper,\n                placement = _beaconPopper.placement,\n                popper = _beaconPopper.popper;\n\n            if (!(['bottom'].indexOf(placement) !== -1) && !hasCustomScroll) {\n              scrollY = Math.floor(popper.top - scrollOffset);\n            }\n          } else if (lifecycle === LIFECYCLE.TOOLTIP && this.tooltipPopper) {\n            var _tooltipPopper = this.tooltipPopper,\n                flipped = _tooltipPopper.flipped,\n                _placement = _tooltipPopper.placement,\n                _popper = _tooltipPopper.popper;\n\n            if (['top', 'right'].indexOf(_placement) !== -1 && !flipped && !hasCustomScroll) {\n              scrollY = Math.floor(_popper.top - scrollOffset);\n            } else {\n              scrollY -= step.spotlightPadding;\n            }\n          }\n\n          if (status === STATUS.RUNNING && shouldScroll && scrollY >= 0) {\n            scrollTo(scrollY, scrollParent);\n          }\n        }\n      }\n    }\n    /**\n     * Trigger the callback.\n     *\n     * @private\n     * @param {Object} data\n     */\n\n    /**\n     * Keydown event listener\n     *\n     * @private\n     * @param {Event} e - Keyboard event\n     */\n\n    /**\n     * Sync the store with the component's state\n     *\n     * @param {Object} state\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!canUseDOM) return null;\n      var _state4 = this.state,\n          index = _state4.index,\n          status = _state4.status;\n      var _props5 = this.props,\n          continuous = _props5.continuous,\n          debug = _props5.debug,\n          disableScrolling = _props5.disableScrolling,\n          steps = _props5.steps;\n      var step = getMergedStep(steps[index], this.props);\n      var output = void 0;\n\n      if (status === STATUS.RUNNING && step) {\n        output = React.createElement(JoyrideStep, _extends({}, this.state, {\n          callback: this.callback,\n          continuous: continuous,\n          debug: debug,\n          disableScrolling: disableScrolling,\n          getPopper: this.getPopper,\n          helpers: this.helpers,\n          step: step,\n          update: this.store.update\n        }));\n      }\n\n      return React.createElement('div', {\n        className: 'joyride'\n      }, output);\n    }\n  }]);\n  return Joyride;\n}(React.Component);\n\nJoyride.propTypes = {\n  beaconComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  callback: PropTypes.func,\n  continuous: PropTypes.bool,\n  debug: PropTypes.bool,\n  disableCloseOnEsc: PropTypes.bool,\n  disableOverlay: PropTypes.bool,\n  disableOverlayClose: PropTypes.bool,\n  disableScrolling: PropTypes.bool,\n  floaterProps: PropTypes.shape({\n    offset: PropTypes.number\n  }),\n  hideBackButton: PropTypes.bool,\n  locale: PropTypes.object,\n  run: PropTypes.bool,\n  scrollOffset: PropTypes.number,\n  scrollToFirstStep: PropTypes.bool,\n  showProgress: PropTypes.bool,\n  showSkipButton: PropTypes.bool,\n  spotlightClicks: PropTypes.bool,\n  spotlightPadding: PropTypes.number,\n  stepIndex: PropTypes.number,\n  steps: PropTypes.array,\n  styles: PropTypes.object,\n  tooltipComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element])\n};\nJoyride.defaultProps = {\n  continuous: false,\n  debug: false,\n  disableCloseOnEsc: false,\n  disableOverlay: false,\n  disableOverlayClose: false,\n  disableScrolling: false,\n  hideBackButton: false,\n  run: true,\n  scrollOffset: 20,\n  scrollToFirstStep: false,\n  showSkipButton: false,\n  showProgress: false,\n  spotlightClicks: false,\n  spotlightPadding: 10,\n  steps: []\n};\nexport default Joyride;","map":null,"metadata":{},"sourceType":"module"}