{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/DefaultSettings.js\";\nimport React from 'react';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { withRouter } from 'react-router-dom';\nimport { CirclePicker } from 'react-color';\nimport request from 'request';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nvar DefaultSettings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DefaultSettings, _React$Component);\n\n  function DefaultSettings(props) {\n    var _this;\n\n    _classCallCheck(this, DefaultSettings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DefaultSettings).call(this, props));\n    _this.state = {\n      noteColor: '#8bc34a'\n    };\n    return _this;\n  }\n\n  _createClass(DefaultSettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var getDefaultSettings = {\n        method: 'GET',\n        url: 'http://127.0.0.1:5000/get-default-settings',\n        qs: {\n          email: localStorage.getItem('email')\n        },\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      request(getDefaultSettings, function (error, response, body) {\n        var parsedData = JSON.parse(body);\n        var val = '';\n\n        try {\n          val = parsedData.credentials.defaultNoteSettings.fontSize.toString();\n        } catch (err) {\n          val = '12';\n        }\n\n        _this2.setState({\n          noteColor: parsedData.credentials.defaultNoteSettings.noteColor,\n          fontName: parsedData.credentials.defaultNoteSettings.fontName,\n          fontSize: val,\n          fontNames: parsedData.applicationSettings.fontNames,\n          fontSizes: parsedData.applicationSettings.fontSizes\n        });\n      });\n    }\n  }, {\n    key: \"changeNoteColor\",\n    value: function changeNoteColor(color) {\n      this.setState({\n        noteColor: color.hex\n      });\n    }\n  }, {\n    key: \"saveDefaultSettings\",\n    value: function () {\n      var _saveDefaultSettings = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(noteColor, fontName, fontSize) {\n        var obj, updateDefaultSettings;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                obj = {\n                  email: localStorage.getItem('email'),\n                  noteColor: noteColor,\n                  fontName: fontName,\n                  fontSize: fontSize\n                };\n\n                if (!obj.noteColor) {\n                  obj.noteColor = '#8bc34a';\n                }\n\n                if (!obj.fontName) {\n                  obj.fontName = 'Georgia';\n                }\n\n                if (!obj.fontSize) {\n                  obj.fontSize = 11;\n                }\n\n                updateDefaultSettings = {\n                  method: 'POST',\n                  url: 'http://127.0.0.1:5000/update-default-settings',\n                  body: JSON.stringify(obj),\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                  }\n                };\n                _context.next = 7;\n                return request(updateDefaultSettings);\n\n              case 7:\n                this.props.history.push('/dashboard');\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function saveDefaultSettings(_x, _x2, _x3) {\n        return _saveDefaultSettings.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      document.body.style.backgroundColor = \"#f5f5f5\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Note Color\"), React.createElement(CirclePicker, {\n        color: this.state.noteColor,\n        onChangeComplete: function onChangeComplete(color) {\n          return _this3.changeNoteColor(color);\n        },\n        colors: [\"#FCDFD7\", \"#FCF9DA\", \"#D4ECDC\", \"#E1EBF5\", \"#F0E5EB\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Font Name\"), React.createElement(Dropdown, {\n        options: this.state.fontNames,\n        onChange: function onChange(fontName) {\n          return _this3.setState({\n            fontName: fontName.value\n          });\n        },\n        value: this.state.fontName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Font Size\"), React.createElement(Dropdown, {\n        options: this.state.fontSizes,\n        onChange: function onChange(fontSize) {\n          return _this3.setState({\n            fontSize: fontSize.value.toString()\n          });\n        },\n        value: this.state.fontSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this3.saveDefaultSettings('#8bc34a', 'Georgia', 11);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" Or Use Reccomended Settings\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.saveDefaultSettings(_this3.state.noteColor, _this3.state.fontName, _this3.state.fontSize);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Save Default Settings\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DefaultSettings;\n}(React.Component);\n\nexport default withRouter(DefaultSettings);","map":{"version":3,"sources":["/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/DefaultSettings.js"],"names":["React","Button","withRouter","CirclePicker","request","Dropdown","DefaultSettings","props","state","noteColor","getDefaultSettings","method","url","qs","email","localStorage","getItem","headers","error","response","body","parsedData","JSON","parse","val","credentials","defaultNoteSettings","fontSize","toString","err","setState","fontName","fontNames","applicationSettings","fontSizes","color","hex","obj","updateDefaultSettings","stringify","history","push","document","style","backgroundColor","changeNoteColor","value","saveDefaultSettings","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { withRouter } from 'react-router-dom';\nimport { CirclePicker } from 'react-color';\nimport request from 'request';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nclass DefaultSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteColor: '#8bc34a',\n    };\n  }\n\n  componentDidMount() {\n    const getDefaultSettings = {\n      method: 'GET',\n      url: 'http://127.0.0.1:5000/get-default-settings',\n      qs: { email: localStorage.getItem('email') },\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    };\n    request(getDefaultSettings, (error, response, body) => {\n      const parsedData = JSON.parse(body);\n      let val = '';\n      try {\n        val = parsedData.credentials.defaultNoteSettings.fontSize.toString();\n      } catch (err) {\n        val = '12';\n      }\n      this.setState({\n        noteColor: parsedData.credentials.defaultNoteSettings.noteColor,\n        fontName: parsedData.credentials.defaultNoteSettings.fontName,\n        fontSize: val,\n        fontNames: parsedData.applicationSettings.fontNames,\n        fontSizes: parsedData.applicationSettings.fontSizes,\n      });\n    });\n  }\n\n  changeNoteColor(color) {\n    this.setState({ noteColor: color.hex });\n  }\n\n  async saveDefaultSettings(noteColor, fontName, fontSize) {\n    const obj = {\n      email: localStorage.getItem('email'), noteColor, fontName, fontSize,\n    };\n    if (!obj.noteColor) { obj.noteColor = '#8bc34a'; }\n    if (!obj.fontName) { obj.fontName = 'Georgia'; }\n    if (!obj.fontSize) { obj.fontSize = 11; }\n    const updateDefaultSettings = {\n      method: 'POST',\n      url: 'http://127.0.0.1:5000/update-default-settings',\n      body: JSON.stringify(obj),\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    };\n    await request(updateDefaultSettings);\n    this.props.history.push('/dashboard');\n  }\n\n  render() {\n    document.body.style.backgroundColor = \"#f5f5f5\"\n    return (\n      <div>\n        <br />\n        <p>Note Color</p>\n        <CirclePicker\n          color={this.state.noteColor}\n          onChangeComplete={color => this.changeNoteColor(color)}\n          colors={[\"#FCDFD7\", \"#FCF9DA\", \"#D4ECDC\", \"#E1EBF5\", \"#F0E5EB\"]}\n        />\n        <p>Font Name</p>\n        <Dropdown options={this.state.fontNames} onChange={fontName => this.setState({ fontName: fontName.value })} value={this.state.fontName} />\n        <p>Font Size</p>\n        <Dropdown options={this.state.fontSizes} onChange={fontSize => this.setState({ fontSize: fontSize.value.toString() })} value={this.state.fontSize} />\n        <br />\n        <a onClick={() => this.saveDefaultSettings('#8bc34a', 'Georgia', 11)}> Or Use Reccomended Settings</a><br/>\n        <Button onClick={() => this.saveDefaultSettings(this.state.noteColor, this.state.fontName, this.state.fontSize)}>Save Default Settings</Button>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DefaultSettings);\n"]},"metadata":{},"sourceType":"module"}