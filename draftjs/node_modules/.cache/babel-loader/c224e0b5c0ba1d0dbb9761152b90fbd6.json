{"ast":null,"code":"import ReactDOM from 'react-dom';\nimport ExecutionEnvironment from 'exenv';\nimport is from 'is-lite';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isRequiredIf from 'react-proptype-conditional-require';\nimport Popper from 'popper.js';\nimport deepmerge from 'deepmerge';\nvar DEFAULTS = {\n  flip: {\n    padding: 20\n  },\n  preventOverflow: {\n    padding: 10\n  }\n};\nvar STATUS = {\n  INIT: 'init',\n  IDLE: 'idle',\n  OPENING: 'opening',\n  OPEN: 'open',\n  CLOSING: 'closing',\n  ERROR: 'error'\n};\nvar canUseDOM = ExecutionEnvironment.canUseDOM;\nvar isReact16 = ReactDOM.createPortal !== undefined;\n\nfunction comparator(data, nextData) {\n  return {\n    changedFrom: function changedFrom(key, previous, actual) {\n      return data[key] === previous && nextData[key] === actual;\n    },\n    changedTo: function changedTo(key, actual) {\n      return data[key] !== actual && nextData[key] === actual;\n    },\n    changed: function changed(key) {\n      return data[key] !== nextData[key];\n    }\n  };\n}\n\nfunction isMobile() {\n  return 'ontouchstart' in window && /Mobi/.test(navigator.userAgent);\n}\n/**\n * Log method calls if debug is enabled\n *\n * @private\n * @param {Object}       arg\n * @param {string}       arg.title    - The title the logger was called from\n * @param {Object|Array} [arg.data]   - The data to be logged\n * @param {boolean}      [arg.warn]  - If true, the message will be a warning\n * @param {boolean}      [arg.debug] - Nothing will be logged unless debug is true\n */\n\n\nfunction log(_ref) {\n  var title = _ref.title,\n      data = _ref.data,\n      _ref$warn = _ref.warn,\n      warn = _ref$warn === undefined ? false : _ref$warn,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === undefined ? false : _ref$debug;\n  /* eslint-disable no-console */\n\n  var logFn = warn ? console.warn || console.error : console.log;\n\n  if (debug && title && data) {\n    console.groupCollapsed('%creact-floater: ' + title, 'color: #9b00ff; font-weight: bold; font-size: 12px;');\n\n    if (Array.isArray(data)) {\n      data.forEach(function (d) {\n        if (is.plainObject(d) && d.key) {\n          logFn.apply(console, [d.key, d.value]);\n        } else {\n          logFn.apply(console, [d]);\n        }\n      });\n    } else {\n      logFn.apply(console, [data]);\n    }\n\n    console.groupEnd();\n  }\n  /* eslint-enable */\n\n}\n\nfunction on(element, event, cb) {\n  var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  element.addEventListener(event, cb, capture);\n}\n\nfunction off(element, event, cb) {\n  var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  element.removeEventListener(event, cb, capture);\n}\n\nfunction once(element, event, cb) {\n  var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  var _nextCB = void 0;\n\n  _nextCB = function nextCB(e) {\n    //eslint-disable-line prefer-const\n    cb(e);\n    off(element, event, _nextCB);\n  };\n\n  on(element, event, _nextCB, capture);\n}\n\nfunction noop() {}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Portal = function (_React$Component) {\n  inherits(Portal, _React$Component);\n\n  function Portal(props) {\n    classCallCheck(this, Portal);\n\n    var _this = possibleConstructorReturn(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).call(this, props));\n\n    if (!canUseDOM) return possibleConstructorReturn(_this);\n    _this.node = document.createElement('div');\n\n    if (props.id) {\n      _this.node.id = props.id;\n    }\n\n    document.body.appendChild(_this.node);\n    return _this;\n  }\n\n  createClass(Portal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!canUseDOM) return;\n\n      if (!isReact16) {\n        this.renderPortal();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (!canUseDOM) return;\n\n      if (!isReact16) {\n        this.renderPortal();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (!canUseDOM || !this.node) return;\n\n      if (!isReact16) {\n        ReactDOM.unmountComponentAtNode(this.node);\n      }\n\n      document.body.removeChild(this.node);\n    }\n  }, {\n    key: 'renderPortal',\n    value: function renderPortal() {\n      if (!canUseDOM) return null;\n      var _props = this.props,\n          children = _props.children,\n          setRef = _props.setRef;\n      /* istanbul ignore else */\n\n      if (isReact16) {\n        return ReactDOM.createPortal(children, this.node);\n      }\n\n      var portal = ReactDOM.unstable_renderSubtreeIntoContainer(this, children.length > 1 ? React.createElement('div', null, children) : children[0], this.node);\n      setRef(portal);\n      return null;\n    }\n  }, {\n    key: 'renderReact16',\n    value: function renderReact16() {\n      var _props2 = this.props,\n          hasChildren = _props2.hasChildren,\n          placement = _props2.placement,\n          target = _props2.target;\n\n      if (!hasChildren) {\n        if (target || placement === 'center') {\n          return this.renderPortal();\n        }\n\n        return null;\n      }\n\n      return this.renderPortal();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!isReact16) {\n        return null;\n      }\n\n      return this.renderReact16();\n    }\n  }]);\n  return Portal;\n}(React.Component);\n\nPortal.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n  hasChildren: PropTypes.bool,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  placement: PropTypes.string,\n  setRef: PropTypes.func.isRequired,\n  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n};\n\nvar Arrow = function (_React$Component) {\n  inherits(Arrow, _React$Component);\n\n  function Arrow() {\n    classCallCheck(this, Arrow);\n    return possibleConstructorReturn(this, (Arrow.__proto__ || Object.getPrototypeOf(Arrow)).apply(this, arguments));\n  }\n\n  createClass(Arrow, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          placement = _props.placement,\n          setArrowRef = _props.setArrowRef,\n          styles = _props.styles;\n      var _styles$arrow = styles.arrow,\n          color = _styles$arrow.color,\n          display = _styles$arrow.display,\n          length = _styles$arrow.length,\n          position = _styles$arrow.position,\n          spread = _styles$arrow.spread;\n      var arrowStyles = {\n        display: display,\n        position: position\n      };\n      var points = void 0;\n      var x = spread;\n      var y = length;\n      /* istanbul ignore else */\n\n      if (placement.startsWith('top')) {\n        points = '0,0 ' + x / 2 + ',' + y + ' ' + x + ',0';\n        arrowStyles.bottom = 0;\n      } else if (placement.startsWith('bottom')) {\n        points = x + ',' + y + ' ' + x / 2 + ',0 0,' + y;\n        arrowStyles.top = 0;\n      } else if (placement.startsWith('left')) {\n        y = spread;\n        x = length;\n        points = '0,0 ' + x + ',' + y / 2 + ' 0,' + y;\n        arrowStyles.right = 0;\n      } else if (placement.startsWith('right')) {\n        y = spread;\n        x = length;\n        points = x + ',' + y + ' ' + x + ',0 0,' + y / 2;\n        arrowStyles.left = 0;\n      }\n\n      return React.createElement('div', {\n        className: '__floater__arrow',\n        style: this.parentStyle\n      }, React.createElement('span', {\n        ref: setArrowRef,\n        style: arrowStyles\n      }, React.createElement('svg', {\n        width: x,\n        height: y,\n        version: '1.1',\n        xmlns: 'http://www.w3.org/2000/svg'\n      }, React.createElement('polygon', {\n        points: points,\n        fill: color\n      }))));\n    }\n  }, {\n    key: 'parentStyle',\n    get: function get$$1() {\n      var _props2 = this.props,\n          placement = _props2.placement,\n          styles = _props2.styles;\n      var length = styles.arrow.length;\n      var arrow = {\n        position: 'absolute'\n      };\n      /* istanbul ignore else */\n\n      if (placement.startsWith('top')) {\n        arrow.bottom = 0;\n        arrow.left = 0;\n        arrow.right = 0;\n        arrow.height = length;\n      } else if (placement.startsWith('bottom')) {\n        arrow.left = 0;\n        arrow.right = 0;\n        arrow.top = 0;\n        arrow.height = length;\n      } else if (placement.startsWith('left')) {\n        arrow.right = 0;\n        arrow.top = 0;\n        arrow.bottom = 0;\n      } else if (placement.startsWith('right')) {\n        arrow.left = 0;\n        arrow.top = 0;\n      }\n\n      return arrow;\n    }\n  }]);\n  return Arrow;\n}(React.Component);\n\nArrow.propTypes = {\n  placement: PropTypes.string.isRequired,\n  setArrowRef: PropTypes.func.isRequired,\n  styles: PropTypes.object.isRequired\n};\n\nvar CloseBtn = function CloseBtn(_ref) {\n  var handleClick = _ref.handleClick,\n      styles = _ref.styles;\n  var color = styles.color,\n      height = styles.height,\n      width = styles.width,\n      style = objectWithoutProperties(styles, ['color', 'height', 'width']);\n  return React.createElement('button', {\n    'aria-label': 'close',\n    onClick: handleClick,\n    style: style,\n    type: 'button'\n  }, React.createElement('svg', {\n    width: width + 'px',\n    height: height + 'px',\n    viewBox: '0 0 18 18',\n    version: '1.1',\n    xmlns: 'http://www.w3.org/2000/svg',\n    preserveAspectRatio: 'xMidYMid'\n  }, React.createElement('g', null, React.createElement('path', {\n    d: 'M8.13911129,9.00268191 L0.171521827,17.0258467 C-0.0498027049,17.248715 -0.0498027049,17.6098394 0.171521827,17.8327545 C0.28204354,17.9443526 0.427188206,17.9998706 0.572051765,17.9998706 C0.71714958,17.9998706 0.862013139,17.9443526 0.972581703,17.8327545 L9.0000937,9.74924618 L17.0276057,17.8327545 C17.1384085,17.9443526 17.2832721,17.9998706 17.4281356,17.9998706 C17.5729992,17.9998706 17.718097,17.9443526 17.8286656,17.8327545 C18.0499901,17.6098862 18.0499901,17.2487618 17.8286656,17.0258467 L9.86135722,9.00268191 L17.8340066,0.973848225 C18.0553311,0.750979934 18.0553311,0.389855532 17.8340066,0.16694039 C17.6126821,-0.0556467968 17.254037,-0.0556467968 17.0329467,0.16694039 L9.00042166,8.25611765 L0.967006424,0.167268345 C0.745681892,-0.0553188426 0.387317931,-0.0553188426 0.165993399,0.167268345 C-0.0553311331,0.390136635 -0.0553311331,0.751261038 0.165993399,0.974176179 L8.13920499,9.00268191 L8.13911129,9.00268191 Z',\n    fill: color\n  }))));\n};\n\nCloseBtn.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  styles: PropTypes.object.isRequired\n};\n\nvar FloaterContainer = function FloaterContainer(_ref) {\n  var content = _ref.content,\n      footer = _ref.footer,\n      handleClick = _ref.handleClick,\n      open = _ref.open,\n      positionWrapper = _ref.positionWrapper,\n      showCloseButton = _ref.showCloseButton,\n      title = _ref.title,\n      styles = _ref.styles;\n  var output = {\n    content: React.isValidElement(content) ? content : React.createElement('div', {\n      className: '__floater__content',\n      style: styles.content\n    }, content)\n  };\n\n  if (title) {\n    output.title = React.isValidElement(title) ? title : React.createElement('div', {\n      className: '__floater__title',\n      style: styles.title\n    }, title);\n  }\n\n  if (footer) {\n    output.footer = React.isValidElement(footer) ? footer : React.createElement('div', {\n      className: '__floater__footer',\n      style: styles.footer\n    }, footer);\n  }\n\n  if ((showCloseButton || positionWrapper) && !is.boolean(open)) {\n    output.close = React.createElement(CloseBtn, {\n      styles: styles.close,\n      handleClick: handleClick\n    });\n  }\n\n  return React.createElement('div', {\n    className: '__floater__container',\n    style: styles.container\n  }, output.close, output.title, output.content, output.footer);\n};\n\nFloaterContainer.propTypes = {\n  content: PropTypes.node.isRequired,\n  footer: PropTypes.node,\n  handleClick: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  positionWrapper: PropTypes.bool.isRequired,\n  showCloseButton: PropTypes.bool.isRequired,\n  styles: PropTypes.object.isRequired,\n  title: PropTypes.node\n};\n\nvar Floater = function (_React$Component) {\n  inherits(Floater, _React$Component);\n\n  function Floater() {\n    classCallCheck(this, Floater);\n    return possibleConstructorReturn(this, (Floater.__proto__ || Object.getPrototypeOf(Floater)).apply(this, arguments));\n  }\n\n  createClass(Floater, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          component = _props.component,\n          closeFn = _props.handleClick,\n          hideArrow = _props.hideArrow,\n          setFloaterRef = _props.setFloaterRef,\n          status = _props.status;\n      var output = {};\n      var classes = ['__floater'];\n\n      if (component) {\n        if (React.isValidElement(component)) {\n          output.content = React.cloneElement(component, {\n            closeFn: closeFn\n          });\n        } else {\n          output.content = component({\n            closeFn: closeFn\n          });\n        }\n      } else {\n        output.content = React.createElement(FloaterContainer, this.props);\n      }\n\n      if (status === STATUS.OPEN) {\n        classes.push('__floater__open');\n      }\n\n      if (!hideArrow) {\n        output.arrow = React.createElement(Arrow, this.props);\n      }\n\n      return React.createElement('div', {\n        ref: setFloaterRef,\n        className: classes.join(' '),\n        style: this.floaterStyle\n      }, React.createElement('div', {\n        className: '__floater__body'\n      }, output.content, output.arrow));\n    }\n  }, {\n    key: 'floaterStyle',\n    get: function get$$1() {\n      var _props2 = this.props,\n          disableAnimation = _props2.disableAnimation,\n          component = _props2.component,\n          placement = _props2.placement,\n          hideArrow = _props2.hideArrow,\n          isPositioned = _props2.isPositioned,\n          status = _props2.status,\n          styles = _props2.styles;\n      var length = styles.arrow.length,\n          floater = styles.floater,\n          floaterCentered = styles.floaterCentered,\n          floaterClosing = styles.floaterClosing,\n          floaterOpening = styles.floaterOpening,\n          floaterWithAnimation = styles.floaterWithAnimation,\n          floaterWithComponent = styles.floaterWithComponent;\n      var element = {};\n\n      if (!hideArrow) {\n        if (placement.startsWith('top')) {\n          element.padding = '0 0 ' + length + 'px';\n        } else if (placement.startsWith('bottom')) {\n          element.padding = length + 'px 0 0';\n        } else if (placement.startsWith('left')) {\n          element.padding = '0 ' + length + 'px 0 0';\n        } else if (placement.startsWith('right')) {\n          element.padding = '0 0 0 ' + length + 'px';\n        }\n      }\n\n      if ([STATUS.OPENING, STATUS.OPEN].indexOf(status) !== -1) {\n        element = _extends({}, element, floaterOpening);\n      }\n\n      if (status === STATUS.CLOSING) {\n        element = _extends({}, element, floaterClosing);\n      }\n\n      if (status === STATUS.OPEN && !disableAnimation && !isPositioned) {\n        element = _extends({}, element, floaterWithAnimation);\n      }\n\n      if (placement === 'center') {\n        element = _extends({}, element, floaterCentered);\n      }\n\n      if (component) {\n        element = _extends({}, element, floaterWithComponent);\n      }\n\n      return _extends({}, floater, element);\n    }\n  }]);\n  return Floater;\n}(React.Component);\n\nFloater.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  content: PropTypes.node,\n  disableAnimation: PropTypes.bool.isRequired,\n  footer: PropTypes.node,\n  handleClick: PropTypes.func.isRequired,\n  hideArrow: PropTypes.bool.isRequired,\n  isPositioned: PropTypes.bool,\n  open: PropTypes.bool,\n  placement: PropTypes.string.isRequired,\n  positionWrapper: PropTypes.bool.isRequired,\n  setArrowRef: PropTypes.func.isRequired,\n  setFloaterRef: PropTypes.func.isRequired,\n  showCloseButton: PropTypes.bool,\n  status: PropTypes.string.isRequired,\n  styles: PropTypes.object.isRequired,\n  title: PropTypes.node\n};\n\nvar Wrapper = function (_React$Component) {\n  inherits(Wrapper, _React$Component);\n\n  function Wrapper() {\n    classCallCheck(this, Wrapper);\n    return possibleConstructorReturn(this, (Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).apply(this, arguments));\n  }\n\n  createClass(Wrapper, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          handleClick = _props.handleClick,\n          handleMouseEnter = _props.handleMouseEnter,\n          handleMouseLeave = _props.handleMouseLeave,\n          setChildRef = _props.setChildRef,\n          setWrapperRef = _props.setWrapperRef,\n          style = _props.style,\n          styles = _props.styles;\n      var element = void 0;\n      /* istanbul ignore else */\n\n      if (children) {\n        if (React.Children.count(children) === 1) {\n          if (!React.isValidElement(children)) {\n            element = React.createElement('span', null, children);\n          } else {\n            var refProp = is.function(children.type) ? 'innerRef' : 'ref';\n            element = React.cloneElement(React.Children.only(children), defineProperty({}, refProp, setChildRef));\n          }\n        } else {\n          element = children;\n        }\n      }\n\n      if (!element) {\n        return null;\n      }\n\n      return React.createElement('span', {\n        ref: setWrapperRef,\n        style: _extends({}, styles, style),\n        onClick: handleClick,\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave\n      }, element);\n    }\n  }]);\n  return Wrapper;\n}(React.Component);\n\nWrapper.propTypes = {\n  children: PropTypes.node,\n  handleClick: PropTypes.func.isRequired,\n  handleMouseEnter: PropTypes.func.isRequired,\n  handleMouseLeave: PropTypes.func.isRequired,\n  setChildRef: PropTypes.func.isRequired,\n  setWrapperRef: PropTypes.func.isRequired,\n  style: PropTypes.object,\n  styles: PropTypes.object.isRequired\n};\nvar zIndex = 100;\nvar STYLES = {\n  wrapper: {\n    cursor: 'help',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    zIndex: zIndex\n  },\n  wrapperPosition: {\n    left: -1000,\n    position: 'absolute',\n    top: -1000,\n    visibility: 'hidden'\n  },\n  floater: {\n    display: 'inline-block',\n    filter: 'drop-shadow(0 0 3px rgba(0, 0, 0, 0.3))',\n    maxWidth: 300,\n    opacity: 0,\n    position: 'relative',\n    transition: 'opacity 0.3s',\n    visibility: 'hidden',\n    zIndex: zIndex\n  },\n  floaterOpening: {\n    opacity: 1,\n    visibility: 'visible'\n  },\n  floaterWithAnimation: {\n    opacity: 1,\n    transition: 'opacity 0.3s, transform 0.2s',\n    visibility: 'visible'\n  },\n  floaterWithComponent: {\n    maxWidth: '100%'\n  },\n  floaterClosing: {\n    opacity: 0,\n    visibility: 'visible'\n  },\n  floaterCentered: {\n    left: '50%',\n    position: 'fixed',\n    top: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  container: {\n    backgroundColor: '#fff',\n    color: '#666',\n    minHeight: 60,\n    minWidth: 200,\n    padding: 20,\n    position: 'relative'\n  },\n  title: {\n    borderBottom: '1px solid #555',\n    color: '#555',\n    fontSize: 18,\n    marginBottom: 5,\n    paddingBottom: 6,\n    paddingRight: 18\n  },\n  content: {\n    fontSize: 15\n  },\n  close: {\n    backgroundColor: 'transparent',\n    border: 0,\n    borderRadius: 0,\n    color: '#555',\n    fontSize: 0,\n    height: 15,\n    outline: 'none',\n    padding: 10,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    width: 15,\n    WebkitAppearance: 'none'\n  },\n  footer: {\n    borderTop: '1px solid #ccc',\n    fontSize: 13,\n    marginTop: 10,\n    paddingTop: 5\n  },\n  arrow: {\n    color: '#fff',\n    display: 'inline-flex',\n    length: 16,\n    position: 'absolute',\n    spread: 32\n  }\n};\nvar POSITIONING_PROPS = ['position', 'top', 'right', 'bottom', 'left'];\n\nvar ReactFloater = function (_React$Component) {\n  inherits(ReactFloater, _React$Component);\n\n  function ReactFloater(props) {\n    classCallCheck(this, ReactFloater);\n    /* istanbul ignore else */\n\n    var _this = possibleConstructorReturn(this, (ReactFloater.__proto__ || Object.getPrototypeOf(ReactFloater)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      currentPlacement: props.placement,\n      positionWrapper: props.wrapperOptions.position && !!props.target,\n      status: STATUS.INIT,\n      statusWrapper: STATUS.INIT\n    };\n    return _this;\n  }\n\n  createClass(ReactFloater, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!canUseDOM) return;\n      var positionWrapper = this.state.positionWrapper;\n      var _props = this.props,\n          children = _props.children,\n          open = _props.open,\n          target = _props.target;\n      log({\n        title: 'init',\n        data: {\n          hasChildren: !!children,\n          hasTarget: !!target,\n          isControlled: is.boolean(open),\n          positionWrapper: positionWrapper,\n          target: this.target,\n          floater: this.floaterRef\n        },\n        debug: this.debug\n      });\n      this.initPopper();\n      if (!children && target && !is.boolean(open)) ;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (!canUseDOM) return;\n      var _props2 = this.props,\n          open = _props2.open,\n          target = _props2.target,\n          wrapperOptions = _props2.wrapperOptions;\n\n      if (open !== nextProps.open) {\n        this.toggle();\n      }\n\n      if (wrapperOptions.position !== nextProps.wrapperOptions.position || target !== nextProps.target) {\n        this.changeWrapperPosition(nextProps);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!canUseDOM) return;\n      var _props3 = this.props,\n          autoOpen = _props3.autoOpen,\n          open = _props3.open;\n\n      var _comparator = comparator(prevState, this.state),\n          changedFrom = _comparator.changedFrom,\n          changedTo = _comparator.changedTo;\n\n      if (changedTo('status', STATUS.IDLE) && open) {\n        this.toggle(STATUS.OPEN);\n      } else if (changedFrom('status', STATUS.INIT, STATUS.IDLE) && autoOpen) {\n        this.toggle(STATUS.OPEN);\n      }\n\n      if (this.floaterRef && (changedTo('status', STATUS.OPENING) || changedTo('status', STATUS.CLOSING))) {\n        once(this.floaterRef, 'transitionend', this.handleTransitionEnd);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (!canUseDOM) return;\n\n      if (this.popper) {\n        this.popper.instance.destroy();\n      }\n\n      if (this.wrapperPopper) {\n        this.wrapperPopper.instance.destroy();\n      }\n    }\n  }, {\n    key: 'initPopper',\n    value: function initPopper() {\n      var _this2 = this;\n\n      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.target;\n      var positionWrapper = this.state.positionWrapper;\n      var _props4 = this.props,\n          disableFlip = _props4.disableFlip,\n          getPopper = _props4.getPopper,\n          hideArrow = _props4.hideArrow,\n          offset = _props4.offset,\n          placement = _props4.placement,\n          wrapperOptions = _props4.wrapperOptions;\n      var flipBehavior = placement === 'top' || placement === 'bottom' ? 'flip' : ['right', 'bottom-end', 'top-end', 'left', 'top-start', 'bottom-start'];\n      /* istanbul ignore else */\n\n      if (placement === 'center') {\n        this.setState({\n          status: STATUS.IDLE\n        });\n      } else if (target && this.floaterRef) {\n        new Popper(target, this.floaterRef, {\n          placement: placement,\n          modifiers: {\n            arrow: _extends({\n              enabled: !hideArrow,\n              element: this.arrowRef\n            }, this.options.arrow),\n            computeStyle: this.options.computeStyle,\n            flip: _extends({\n              enabled: !disableFlip,\n              behavior: flipBehavior\n            }, this.options.flip),\n            keepTogether: this.options.keepTogether,\n            hide: this.options.hide,\n            inner: this.options.inner,\n            offset: _extends({\n              offset: '0, ' + offset + 'px'\n            }, this.options.offset),\n            preventOverflow: this.options.preventOverflow,\n            shift: this.options.shift\n          },\n          onCreate: function onCreate(data) {\n            _this2.popper = data;\n            getPopper(data, 'floater');\n\n            _this2.setState({\n              currentPlacement: data.placement,\n              status: STATUS.IDLE\n            });\n\n            if (placement !== data.placement) {\n              setTimeout(function () {\n                data.instance.update();\n              }, 1);\n            }\n          },\n          onUpdate: function onUpdate(data) {\n            _this2.popper = data;\n            var currentPlacement = _this2.state.currentPlacement;\n\n            if (data.placement !== currentPlacement) {\n              _this2.setState({\n                currentPlacement: data.placement\n              });\n            }\n          }\n        });\n      }\n\n      if (positionWrapper) {\n        var wrapperOffset = !is.undefined(wrapperOptions.offset) ? wrapperOptions.offset : 0;\n        new Popper(this.target, this.wrapperRef, {\n          placement: wrapperOptions.placement || placement,\n          modifiers: {\n            arrow: {\n              enabled: false\n            },\n            offset: {\n              offset: '0, ' + wrapperOffset + 'px'\n            },\n            flip: {\n              enabled: false\n            }\n          },\n          onCreate: function onCreate(data) {\n            _this2.wrapperPopper = data;\n\n            _this2.setState({\n              statusWrapper: STATUS.IDLE\n            });\n\n            getPopper(data, 'wrapper');\n\n            if (placement !== data.placement) {\n              setTimeout(function () {\n                data.instance.update();\n              }, 1);\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: 'changeWrapperPosition',\n    value: function changeWrapperPosition(_ref) {\n      var target = _ref.target,\n          wrapperOptions = _ref.wrapperOptions;\n      this.setState({\n        positionWrapper: wrapperOptions.position && !!target\n      });\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle(forceStatus) {\n      var status = this.state.status;\n      var nextStatus = status === STATUS.OPEN ? STATUS.CLOSING : STATUS.OPENING;\n\n      if (!is.undefined(forceStatus)) {\n        nextStatus = forceStatus;\n      }\n\n      this.setState({\n        status: nextStatus\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          currentPlacement = _state.currentPlacement,\n          positionWrapper = _state.positionWrapper,\n          status = _state.status;\n      var _props5 = this.props,\n          children = _props5.children,\n          component = _props5.component,\n          content = _props5.content,\n          disableAnimation = _props5.disableAnimation,\n          footer = _props5.footer,\n          hideArrow = _props5.hideArrow,\n          isPositioned = _props5.isPositioned,\n          open = _props5.open,\n          showCloseButton = _props5.showCloseButton,\n          style = _props5.style,\n          title = _props5.title;\n      var wrapper = React.createElement(Wrapper, {\n        handleClick: this.handleClick,\n        handleMouseEnter: this.handleMouseEnter,\n        handleMouseLeave: this.handleMouseLeave,\n        setChildRef: this.setChildRef,\n        setWrapperRef: this.setWrapperRef,\n        style: style,\n        styles: this.styles.wrapper\n      }, children);\n      var output = {};\n\n      if (positionWrapper) {\n        output.wrapperInPortal = wrapper;\n      } else {\n        output.wrapperAsChildren = wrapper;\n      }\n\n      return React.createElement('span', null, React.createElement(Portal, _extends({}, this.props, {\n        hasChildren: !!children,\n        placement: currentPlacement,\n        setRef: this.setFloaterRef,\n        status: status\n      }), React.createElement(Floater, {\n        component: component,\n        content: content,\n        disableAnimation: disableAnimation,\n        footer: footer,\n        handleClick: this.handleClick,\n        hideArrow: hideArrow || currentPlacement === 'center',\n        isPositioned: isPositioned,\n        open: open,\n        placement: currentPlacement,\n        positionWrapper: positionWrapper,\n        setArrowRef: this.setArrowRef,\n        setFloaterRef: this.setFloaterRef,\n        showCloseButton: showCloseButton,\n        status: status,\n        styles: this.styles,\n        title: title\n      }), output.wrapperInPortal), output.wrapperAsChildren);\n    }\n  }, {\n    key: 'debug',\n    get: function get$$1() {\n      var debug = this.props.debug;\n      return debug || !!global.ReactFloaterDebug;\n    }\n  }, {\n    key: 'event',\n    get: function get$$1() {\n      var _props6 = this.props,\n          disableHoverToClick = _props6.disableHoverToClick,\n          event = _props6.event;\n\n      if (event === 'hover' && isMobile() && !disableHoverToClick) {\n        return 'click';\n      }\n\n      return event;\n    }\n  }, {\n    key: 'options',\n    get: function get$$1() {\n      var options = this.props.options;\n      return deepmerge(DEFAULTS, options || {});\n    }\n  }, {\n    key: 'styles',\n    get: function get$$1() {\n      var _this3 = this;\n\n      var _state2 = this.state,\n          status = _state2.status,\n          positionWrapper = _state2.positionWrapper,\n          statusWrapper = _state2.statusWrapper;\n      var styles = this.props.styles;\n      var nextStyles = deepmerge(STYLES, styles);\n\n      if (positionWrapper) {\n        var wrapperStyles = void 0;\n\n        if (!([STATUS.IDLE].indexOf(status) !== -1) || !([STATUS.IDLE].indexOf(statusWrapper) !== -1)) {\n          wrapperStyles = nextStyles.wrapperPosition;\n        } else {\n          wrapperStyles = this.wrapperPopper.styles;\n        }\n\n        nextStyles.wrapper = _extends({}, nextStyles.wrapper, wrapperStyles);\n      }\n      /* istanbul ignore else */\n\n\n      if (this.target) {\n        var targetStyles = window.getComputedStyle(this.target);\n        /* istanbul ignore else */\n\n        if (this.wrapperStyles) {\n          nextStyles.wrapper = _extends({}, nextStyles.wrapper, this.wrapperStyles);\n        } else if (!(['relative', 'static'].indexOf(targetStyles.position) !== -1)) {\n          this.wrapperStyles = {};\n\n          if (!positionWrapper) {\n            POSITIONING_PROPS.forEach(function (d) {\n              _this3.wrapperStyles[d] = targetStyles[d];\n            });\n            nextStyles.wrapper = _extends({}, nextStyles.wrapper, this.wrapperStyles);\n            this.target.style.position = 'relative';\n            this.target.style.top = 'auto';\n            this.target.style.right = 'auto';\n            this.target.style.bottom = 'auto';\n            this.target.style.left = 'auto';\n          }\n        }\n      }\n\n      return nextStyles;\n    }\n  }, {\n    key: 'target',\n    get: function get$$1() {\n      var target = this.props.target;\n\n      if (target) {\n        if (is.domElement(target)) {\n          return target;\n        }\n\n        return document.querySelector(target);\n      }\n\n      return this.childRef || this.wrapperRef;\n    }\n  }]);\n  return ReactFloater;\n}(React.Component);\n\nReactFloater.propTypes = {\n  autoOpen: PropTypes.bool,\n  callback: PropTypes.func,\n  children: PropTypes.node,\n  component: isRequiredIf(PropTypes.oneOfType([PropTypes.func, PropTypes.element]), function (props) {\n    return !props.content;\n  }),\n  content: isRequiredIf(PropTypes.node, function (props) {\n    return !props.component;\n  }),\n  debug: PropTypes.bool,\n  disableAnimation: PropTypes.bool,\n  disableFlip: PropTypes.bool,\n  disableHoverToClick: PropTypes.bool,\n  event: PropTypes.oneOf(['hover', 'click']),\n  eventDelay: PropTypes.number,\n  footer: PropTypes.node,\n  getPopper: PropTypes.func,\n  hideArrow: PropTypes.bool,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isPositioned: PropTypes.bool,\n  offset: PropTypes.number,\n  open: PropTypes.bool,\n  options: PropTypes.object,\n  placement: PropTypes.oneOf(['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end', 'auto', 'center']),\n  showCloseButton: PropTypes.bool,\n  style: PropTypes.object,\n  styles: PropTypes.object,\n  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.node,\n  wrapperOptions: PropTypes.shape({\n    offset: PropTypes.number,\n    placement: PropTypes.oneOf(['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end', 'auto']),\n    position: PropTypes.bool\n  })\n};\nReactFloater.defaultProps = {\n  autoOpen: false,\n  callback: noop,\n  debug: false,\n  disableAnimation: false,\n  disableFlip: false,\n  disableHoverToClick: false,\n  event: 'click',\n  eventDelay: 0.4,\n  getPopper: noop,\n  hideArrow: false,\n  offset: 15,\n  placement: 'bottom',\n  showCloseButton: false,\n  styles: {},\n  target: null,\n  wrapperOptions: {\n    position: false\n  }\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this4 = this;\n\n  this.setArrowRef = function (ref) {\n    _this4.arrowRef = ref;\n  };\n\n  this.setChildRef = function (ref) {\n    _this4.childRef = ref;\n  };\n\n  this.setFloaterRef = function (ref) {\n    if (!_this4.floaterRef) {\n      _this4.floaterRef = ref;\n    }\n  };\n\n  this.setWrapperRef = function (ref) {\n    _this4.wrapperRef = ref;\n  };\n\n  this.handleTransitionEnd = function () {\n    var status = _this4.state.status;\n    var callback = _this4.props.callback;\n    /* istanbul ignore else */\n\n    if (_this4.wrapperPopper) {\n      _this4.wrapperPopper.instance.update();\n    }\n\n    _this4.setState({\n      status: status === STATUS.OPENING ? STATUS.OPEN : STATUS.IDLE\n    }, function () {\n      var newStatus = _this4.state.status;\n      callback(newStatus === STATUS.OPEN ? 'open' : 'close', _this4.props);\n    });\n  };\n\n  this.handleClick = function () {\n    var _props7 = _this4.props,\n        event = _props7.event,\n        open = _props7.open;\n    if (is.boolean(open)) return;\n    var _state3 = _this4.state,\n        positionWrapper = _state3.positionWrapper,\n        status = _state3.status;\n    /* istanbul ignore else */\n\n    if (_this4.event === 'click' || _this4.event === 'hover' && positionWrapper) {\n      log({\n        title: 'click',\n        data: [{\n          event: event,\n          status: status === STATUS.OPEN ? 'closing' : 'opening'\n        }],\n        debug: _this4.debug\n      });\n\n      _this4.toggle();\n    }\n  };\n\n  this.handleMouseEnter = function () {\n    var _props8 = _this4.props,\n        event = _props8.event,\n        open = _props8.open;\n    if (is.boolean(open) || isMobile()) return;\n    var status = _this4.state.status;\n    /* istanbul ignore else */\n\n    if (_this4.event === 'hover' && status === STATUS.IDLE) {\n      log({\n        title: 'mouseEnter',\n        data: [{\n          key: 'originalEvent',\n          value: event\n        }],\n        debug: _this4.debug\n      });\n      clearTimeout(_this4.eventDelayTimeout);\n\n      _this4.toggle();\n    }\n  };\n\n  this.handleMouseLeave = function () {\n    var _props9 = _this4.props,\n        event = _props9.event,\n        eventDelay = _props9.eventDelay,\n        open = _props9.open;\n    if (is.boolean(open) || isMobile()) return;\n    var _state4 = _this4.state,\n        status = _state4.status,\n        positionWrapper = _state4.positionWrapper;\n    /* istanbul ignore else */\n\n    if (_this4.event === 'hover') {\n      log({\n        title: 'mouseLeave',\n        data: [{\n          key: 'originalEvent',\n          value: event\n        }],\n        debug: _this4.debug\n      });\n\n      if (!eventDelay) {\n        _this4.toggle(STATUS.IDLE);\n      } else if ([STATUS.OPENING, STATUS.OPEN].indexOf(status) !== -1 && !positionWrapper && !_this4.eventDelayTimeout) {\n        _this4.eventDelayTimeout = setTimeout(function () {\n          delete _this4.eventDelayTimeout;\n\n          _this4.toggle();\n        }, eventDelay * 1000);\n      }\n    }\n  };\n};\n\nexport default ReactFloater;","map":null,"metadata":{},"sourceType":"module"}