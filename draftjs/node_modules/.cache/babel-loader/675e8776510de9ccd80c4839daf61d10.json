{"ast":null,"code":"import _classCallCheck from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/Dashboard.js\";\nimport React from 'react';\nimport { Table, Button, Switch, Input, Menu, Dropdown, Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport { withRouter } from 'react-router-dom';\nimport request from 'request';\nimport axios from 'axios';\nimport Walkthrough from './Walkthrough';\nimport CardNote from './CardNote/CardNote';\nimport NavigationBar from './NavigationBar';\nimport '../css/dashboard.css';\nimport { mergeSort } from '../defaults/constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nvar Search = Input.Search;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this.state = {\n      notes: null,\n      credentials: {\n        runTutorial: null\n      },\n      menu: React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this.sortNotes('category');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Document Category\")), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this.sortNotes('lastUpdated');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Date Modified\")), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this.sortNotes('title');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Document Name\"))),\n      noteColumns: [{\n        title: 'Document Name',\n        dataIndex: 'title',\n        render: function render(text, record) {\n          return {\n            props: {\n              style: {\n                background: record.noteColor\n              }\n            },\n            children: React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, text)\n          };\n        }\n      }, {\n        title: 'Date Created',\n        dataIndex: 'createdAt',\n        render: function render(text, record) {\n          return {\n            props: {\n              style: {\n                background: record.noteColor\n              }\n            },\n            children: React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }, text)\n          };\n        }\n      }, {\n        title: 'Last Updated',\n        dataIndex: 'lastUpdated',\n        render: function render(text, record) {\n          return {\n            props: {\n              style: {\n                background: record.noteColor\n              }\n            },\n            children: React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, text)\n          };\n        }\n      }, {\n        title: 'Category',\n        dataIndex: 'category',\n        render: function render(text, record) {\n          return {\n            props: {\n              style: {\n                background: record.noteColor\n              }\n            },\n            children: React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, text)\n          };\n        }\n      }, {\n        title: 'Action',\n        className: \"classNameOfColumn\",\n        render: function render(text, record) {\n          return React.createElement(\"div\", {\n            style: {\n              background: record.noteColor\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            className: 'editNote',\n            onClick: function onClick() {\n              return _this.editNote(localStorage.getItem('email'), record._id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"Edit | \"), React.createElement(\"a\", {\n            className: 'deleteNote',\n            onClick: function onClick() {\n              return _this.deleteNote(localStorage.getItem('email'), record._id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Delete\"));\n        }\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = localStorage.getItem('id');\n      var refreshToken = localStorage.getItem('refresh_token');\n      var AuthStr = 'Bearer '.concat(refreshToken);\n      axios.get('http://127.0.0.1:5000/refresh', {\n        headers: {\n          Authorization: AuthStr\n        }\n      }).then(function (response) {\n        localStorage.setItem('access_token', response.data.access_token);\n      }).catch(function (error) {\n        console.log(error, 'ERROR - BAD REFRESH TOKEN');\n      });\n      var email = localStorage.getItem('email');\n      AuthStr = 'Bearer '.concat(id);\n      axios.get('http://127.0.0.1:5000/get-data', {\n        headers: {\n          Authorization: AuthStr\n        },\n        params: {\n          email: email,\n          id: id\n        }\n      }).then(function (response) {\n        _this2.setState({\n          notes: response.data.notes,\n          credentials: response.data.credentials\n        });\n      }).catch(function (error) {\n        console.log(error, 'ERROR - INVALID or NO COOKIES');\n      });\n    }\n  }, {\n    key: \"editNote\",\n    value: function editNote(email, noteID) {\n      this.props.history.push({\n        pathname: \"/note/\".concat(noteID),\n        state: {\n          noteID: noteID\n        }\n      });\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(email, noteID) {\n      var _this3 = this;\n\n      var deleteNote = {\n        method: 'DELETE',\n        url: 'http://127.0.0.1:5000/delete-note',\n        qs: {\n          email: email,\n          noteID: noteID\n        },\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      request(deleteNote, function (error, response, body) {\n        var parsedData = JSON.parse(body);\n\n        _this3.setState({\n          notes: parsedData.notes\n        });\n      });\n    }\n  }, {\n    key: \"createNote\",\n    value: function createNote(email) {\n      var _this4 = this;\n\n      var postNewNote = {\n        method: 'POST',\n        url: 'http://127.0.0.1:5000/new-note',\n        qs: {\n          email: email\n        },\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      request(postNewNote, function (error, response, body) {\n        var parsedData = JSON.parse(body);\n\n        _this4.props.history.push({\n          pathname: \"/new-note/\".concat(parsedData._id),\n          state: {\n            noteID: parsedData._id\n          }\n        });\n      });\n    }\n  }, {\n    key: \"switchView\",\n    value: function switchView(child) {\n      if (!child) {\n        this.setState({\n          isTableView: true\n        });\n      } else {\n        this.setState({\n          isTableView: false\n        });\n      }\n    }\n  }, {\n    key: \"sortNotes\",\n    value: function sortNotes(option) {\n      var sortedNotes = mergeSort(this.state.notes, option);\n      this.setState({\n        notes: sortedNotes\n      });\n    }\n  }, {\n    key: \"searchNotes\",\n    value: function searchNotes(query) {\n      var obj = {\n        email: localStorage.getItem('email')\n      };\n      var getNotes = {\n        method: 'POST',\n        url: 'http://127.0.0.1:5000/get-notes',\n        body: JSON.stringify(obj),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      request(getNotes, function (error, response, body) {\n        var parsedData = JSON.parse(body);\n\n        if (query.trim().length !== 0) {\n          var filteredNotes = [];\n\n          for (var note in parsedData.notes) {\n            if (parsedData.notes[note].title.includes(query)) {\n              filteredNotes.push(parsedData.notes[note]);\n            }\n          }\n\n          this.setState({\n            'notes': filteredNotes\n          });\n        } else {\n          this.setState({\n            'notes': parsedData.notes\n          });\n        }\n      }.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      document.body.style.backgroundColor = \"#eaeaea\";\n\n      if (this.state.isTableView) {\n        return React.createElement(\"div\", {\n          style: {\n            background: \"#eaeaea\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(NavigationBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"child\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(Walkthrough, {\n          runTutorial: this.state.credentials.runTutorial,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }), React.createElement(Search, {\n          onChange: function onChange(searchContent) {\n            return _this5.searchNotes(searchContent.target.value);\n          },\n          style: {\n            width: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), React.createElement(Dropdown, {\n          overlay: this.state.menu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"filter\",\n          theme: \"filled\",\n          style: {\n            'color': '#466fb5'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        })), React.createElement(Switch, {\n          checkedChildren: \"table\",\n          unCheckedChildren: \"card\",\n          onChange: function onChange(child) {\n            return _this5.switchView(child);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }), React.createElement(Icon, {\n          type: \"setting\",\n          theme: \"filled\",\n          onClick: function onClick() {\n            return _this5.props.history.push('/default-settings');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }), React.createElement(Button, {\n          type: \"primary\",\n          className: \"generateNewNote\",\n          onClick: function onClick() {\n            return _this5.createNote(localStorage.getItem('email'));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"New Document\"))), React.createElement(\"div\", {\n          className: \"bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(CardNote, {\n          notes: this.state.notes,\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          background: \"#eaeaea\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(NavigationBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Walkthrough, {\n        runTutorial: this.state.credentials.runTutorial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(Search, {\n        onChange: function onChange(searchContent) {\n          return _this5.searchNotes(searchContent.target.value);\n        },\n        style: {\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        overlay: this.state.menu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"filter\",\n        theme: \"filled\",\n        style: {\n          'color': '#466fb5'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        checkedChildren: \"table\",\n        unCheckedChildren: \"card\",\n        defaultChecked: true,\n        onChange: function onChange(child) {\n          return _this5.switchView(child);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"setting\",\n        theme: \"filled\",\n        onClick: function onClick() {\n          return _this5.props.history.push('/default-settings');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        className: \"generateNewNote\",\n        onClick: function onClick() {\n          return _this5.createNote(localStorage.getItem('email'));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"New Document\"))), React.createElement(\"div\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Table, {\n        dataSource: this.state.notes,\n        className: \"notesTable\",\n        rowKey: \"_id\",\n        columns: this.state.noteColumns,\n        pagination: {\n          defaultPageSize: 5\n        },\n        rowClassName: function rowClassName(record) {\n          return record.noteColor;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default withRouter(Dashboard);","map":{"version":3,"sources":["/Users/chrisackerman/Documents/Institute/WriteFree/front-end/WriteFree-frontend/draftjs/src/components/Dashboard.js"],"names":["React","Table","Button","Switch","Input","Menu","Dropdown","Icon","withRouter","request","axios","Walkthrough","CardNote","NavigationBar","mergeSort","FontAwesomeIcon","Search","Dashboard","props","state","notes","credentials","runTutorial","menu","sortNotes","noteColumns","title","dataIndex","render","text","record","style","background","noteColor","children","className","editNote","localStorage","getItem","_id","deleteNote","id","refreshToken","AuthStr","concat","get","headers","Authorization","then","response","setItem","data","access_token","catch","error","console","log","email","params","setState","noteID","history","push","pathname","method","url","qs","body","parsedData","JSON","parse","postNewNote","child","isTableView","option","sortedNotes","query","obj","getNotes","stringify","trim","length","filteredNotes","note","includes","bind","document","backgroundColor","searchContent","searchNotes","target","value","width","switchView","createNote","defaultPageSize","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Button, Switch, Input, Menu, Dropdown, Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport { withRouter } from 'react-router-dom';\nimport request from 'request';\nimport axios from 'axios';\nimport Walkthrough from './Walkthrough';\nimport CardNote from './CardNote/CardNote';\nimport NavigationBar from './NavigationBar';\nimport '../css/dashboard.css';\nimport { mergeSort } from '../defaults/constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Search = Input.Search;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: null,\n      credentials: { runTutorial: null },\n      menu: (\n        <Menu>\n          <Menu.Item>\n            <a onClick={() => this.sortNotes('category')}>Document Category</a>\n          </Menu.Item>\n          <Menu.Item>\n            <a onClick={() => this.sortNotes('lastUpdated')}>Date Modified</a>\n          </Menu.Item>\n          <Menu.Item>\n            <a onClick={() => this.sortNotes('title')}>Document Name</a>\n          </Menu.Item>\n        </Menu>\n      ),\n      noteColumns: [{\n        title: 'Document Name',\n        dataIndex: 'title',\n        render(text, record) {\n          return {\n            props: {\n              style: { background: record.noteColor },\n            },\n            children: <div>{text}</div>,\n          };\n        },\n      }, {\n        title: 'Date Created',\n        dataIndex: 'createdAt',\n        render(text, record) {\n          return {\n            props: {\n              style: { background: record.noteColor },\n            },\n            children: <div>{text}</div>,\n          };\n        },\n      }, {\n        title: 'Last Updated',\n        dataIndex: 'lastUpdated',\n        render(text, record) {\n          return {\n            props: {\n              style: { background: record.noteColor },\n            },\n            children: <div>{text}</div>,\n          };\n        },\n      }, {\n        title: 'Category',\n        dataIndex: 'category',\n        render(text, record) {\n          return {\n            props: {\n              style: { background: record.noteColor },\n            },\n            children: <div>{text}</div>,\n          };\n        },\n      }, {\n        title: 'Action',\n        className: \"classNameOfColumn\",\n        render: (text, record) => (\n          <div style={ {background: record.noteColor} }>\n            <a className={'editNote'} onClick={() => this.editNote(localStorage.getItem('email'), record._id)}>Edit | </a>\n            <a className={'deleteNote'} onClick={() => this.deleteNote(localStorage.getItem('email'), record._id)}>Delete</a>\n          </div>\n        ),\n      }],\n    };\n  }\n\n  componentDidMount() {\n    const id = localStorage.getItem('id');\n    const refreshToken = localStorage.getItem('refresh_token');\n    let AuthStr = 'Bearer '.concat(refreshToken);\n    axios.get('http://127.0.0.1:5000/refresh', { headers: { Authorization: AuthStr } }).then((response) => {\n      localStorage.setItem('access_token', response.data.access_token)\n    }).catch((error) => {\n      console.log(error, 'ERROR - BAD REFRESH TOKEN');\n    });\n    const email = localStorage.getItem('email');\n    AuthStr = 'Bearer '.concat(id);\n    axios.get('http://127.0.0.1:5000/get-data', { headers: { Authorization: AuthStr }, params: { email, id } }).then((response) => {\n      this.setState({\n        notes: response.data.notes,\n        credentials: response.data.credentials,\n      });\n    }).catch((error) => {\n      console.log(error, 'ERROR - INVALID or NO COOKIES');\n    });\n  }\n\n  editNote(email, noteID) {\n    this.props.history.push({\n      pathname: `/note/${noteID}`,\n      state: { noteID },\n    });\n  }\n\n  deleteNote(email, noteID) {\n    const deleteNote = {\n      method: 'DELETE',\n      url: 'http://127.0.0.1:5000/delete-note',\n      qs: { email, noteID },\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    };\n    request(deleteNote, (error, response, body) => {\n      const parsedData = JSON.parse(body);\n      this.setState({ notes: parsedData.notes });\n    });\n  }\n\n\n  createNote(email) {\n    const postNewNote = {\n      method: 'POST',\n      url: 'http://127.0.0.1:5000/new-note',\n      qs: { email },\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    };\n    request(postNewNote, (error, response, body) => {\n      const parsedData = JSON.parse(body);\n      this.props.history.push({\n        pathname: `/new-note/${parsedData._id}`,\n        state: { noteID: parsedData._id },\n      });\n    });\n  }\n\n  switchView(child) {\n    if (!child) {\n      this.setState({ isTableView: true });\n    } else {\n      this.setState({ isTableView: false });\n    }\n  }\n\n  sortNotes(option) {\n    const sortedNotes = mergeSort(this.state.notes, option);\n    this.setState({ notes: sortedNotes });\n  }\n\n  searchNotes(query){\n    let obj = { email: localStorage.getItem('email') }\n    const getNotes = {\n        method: 'POST',\n        url: 'http://127.0.0.1:5000/get-notes',\n        body: JSON.stringify(obj),\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    };\n    request(getNotes, function (error, response, body) {\n        var parsedData = JSON.parse(body);\n        if (query.trim().length !== 0){\n            const filteredNotes = [];\n            for (let note in parsedData.notes){\n                if (parsedData.notes[note].title.includes(query)){\n                    filteredNotes.push(parsedData.notes[note])\n                }\n            }\n            this.setState({'notes': filteredNotes})\n        } else {\n            this.setState({'notes': parsedData.notes})\n        }\n\n    }.bind(this));\n  }\n\n  render() {\n    document.body.style.backgroundColor = \"#eaeaea\";\n    if (this.state.isTableView) {\n      return (\n        <div style={{background: \"#eaeaea\"}}>\n            <NavigationBar/>\n            <div className={\"middle\"}>\n                <div className={\"child\"}>\n                    <Walkthrough runTutorial={this.state.credentials.runTutorial} />\n                    <Search\n                        onChange={searchContent => this.searchNotes(searchContent.target.value)}\n                        style={{ width: 200 }}\n                    />\n                    <Dropdown overlay={this.state.menu}>\n                       <Icon type=\"filter\" theme=\"filled\" style={{'color': '#466fb5'}}/>\n                    </Dropdown>\n                    <Switch checkedChildren=\"table\" unCheckedChildren=\"card\" onChange={child => this.switchView(child)} />\n\n                    <Icon type=\"setting\" theme=\"filled\" onClick={() => this.props.history.push('/default-settings')} />\n                    <Button type=\"primary\" className=\"generateNewNote\" onClick={() => this.createNote(localStorage.getItem('email'))}>New Document</Button>\n                </div>\n            </div>\n            <div className={\"bottom\"}>\n              <CardNote notes={this.state.notes} history={this.props.history} />\n            </div>\n        </div>\n      )\n    }\n    return (\n      <div style={{background: \"#eaeaea\"}}>\n        <NavigationBar/>\n        <div className={\"middle\"}>\n            <div className={\"child\"}>\n            <Walkthrough runTutorial={this.state.credentials.runTutorial} />\n                  <Search\n                      onChange={searchContent => this.searchNotes(searchContent.target.value)}\n                      style={{ width: 200 }}\n                  />\n            <Dropdown overlay={this.state.menu}>\n                <Icon type=\"filter\" theme=\"filled\" style={{'color': '#466fb5'}}/>\n            </Dropdown>\n            <Switch checkedChildren=\"table\" unCheckedChildren=\"card\" defaultChecked onChange={child => this.switchView(child)} />\n            <Icon type=\"setting\" theme=\"filled\" onClick={() => this.props.history.push('/default-settings')} />\n            <Button type=\"primary\" className=\"generateNewNote\" onClick={() => this.createNote(localStorage.getItem('email'))}>New Document</Button>\n            </div>\n        </div>\n        <div className={\"bottom\"}>\n            <Table\n                dataSource={this.state.notes}\n                className=\"notesTable\"\n                rowKey=\"_id\"\n                columns={this.state.noteColumns}\n                pagination={{defaultPageSize: 5}}\n                rowClassName={(record) => record.noteColor}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n"]},"metadata":{},"sourceType":"module"}